{"version":3,"file":"tsm.min.js","sources":["../src/constants.ts","../src/vec4.ts","../src/mat4.ts","../src/mat3.ts","../src/quat.ts","../src/vec3.ts","../src/vec2.ts","../src/mat2.ts","../src/index.ts"],"sourcesContent":["export const epsilon = 0.00001\n","import mat4 from './mat4'\n\nimport { epsilon } from './constants'\n\nexport default class vec4 {\n\n    get x(): number {\n        return this.values[0]\n    }\n\n    get y(): number {\n        return this.values[1]\n    }\n\n    get z(): number {\n        return this.values[2]\n    }\n\n    get w(): number {\n        return this.values[3]\n    }\n\n    get xy(): [number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n        ]\n    }\n\n    get xyz(): [number, number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n        ]\n    }\n\n    get xyzw(): [number, number, number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n            this.values[3],\n        ]\n    }\n\n    set x(value: number) {\n        this.values[0] = value\n    }\n\n    set y(value: number) {\n        this.values[1] = value\n    }\n\n    set z(value: number) {\n        this.values[2] = value\n    }\n\n    set w(value: number) {\n        this.values[3] = value\n    }\n\n    set xy(values: [number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n    }\n\n    set xyz(values: [number, number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n        this.values[2] = values[2]\n    }\n\n    set xyzw(values: [number, number, number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n        this.values[2] = values[2]\n        this.values[3] = values[3]\n    }\n\n    get r(): number {\n        return this.values[0]\n    }\n\n    get g(): number {\n        return this.values[1]\n    }\n\n    get b(): number {\n        return this.values[2]\n    }\n\n    get a(): number {\n        return this.values[3]\n    }\n\n    get rg(): [number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n        ]\n    }\n\n    get rgb(): [number, number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n        ]\n    }\n\n    get rgba(): [number, number, number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n            this.values[3],\n        ]\n    }\n\n    set r(value: number) {\n        this.values[0] = value\n    }\n\n    set g(value: number) {\n        this.values[1] = value\n    }\n\n    set b(value: number) {\n        this.values[2] = value\n    }\n\n    set a(value: number) {\n        this.values[3] = value\n    }\n\n    set rg(values: [number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n    }\n\n    set rgb(values: [number, number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n        this.values[2] = values[2]\n    }\n\n    set rgba(values: [number, number, number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n        this.values[2] = values[2]\n        this.values[3] = values[3]\n    }\n\n    constructor(values?: [number, number, number, number]) {\n        if (values !== undefined) {\n            this.xyzw = values\n        }\n    }\n\n    private values = new Float32Array(4)\n\n    static readonly zero = new vec4([0, 0, 0, 1])\n    static readonly one = new vec4([1, 1, 1, 1])\n\n    at(index: number): number {\n        return this.values[index]\n    }\n\n    reset(): void {\n        this.x = 0\n        this.y = 0\n        this.z = 0\n        this.w = 0\n    }\n\n    copy(dest?: vec4): vec4 {\n        if (!dest) { dest = new vec4() }\n\n        dest.x = this.x\n        dest.y = this.y\n        dest.z = this.z\n        dest.w = this.w\n\n        return dest\n    }\n\n    negate(dest?: vec4): vec4 {\n        if (!dest) { dest = this }\n\n        dest.x = -this.x\n        dest.y = -this.y\n        dest.z = -this.z\n        dest.w = -this.w\n\n        return dest\n    }\n\n    equals(vector: vec4, threshold = epsilon): boolean {\n        if (Math.abs(this.x - vector.x) > threshold) {\n            return false\n        }\n\n        if (Math.abs(this.y - vector.y) > threshold) {\n            return false\n        }\n\n        if (Math.abs(this.z - vector.z) > threshold) {\n            return false\n        }\n\n        if (Math.abs(this.w - vector.w) > threshold) {\n            return false\n        }\n\n        return true\n    }\n\n    length(): number {\n        return Math.sqrt(this.squaredLength())\n    }\n\n    squaredLength(): number {\n        const x = this.x\n        const y = this.y\n        const z = this.z\n        const w = this.w\n\n        return (x * x + y * y + z * z + w * w)\n    }\n\n    add(vector: vec4): vec4 {\n        this.x += vector.x\n        this.y += vector.y\n        this.z += vector.z\n        this.w += vector.w\n\n        return this\n    }\n\n    subtract(vector: vec4): vec4 {\n        this.x -= vector.x\n        this.y -= vector.y\n        this.z -= vector.z\n        this.w -= vector.w\n\n        return this\n    }\n\n    multiply(vector: vec4): vec4 {\n        this.x *= vector.x\n        this.y *= vector.y\n        this.z *= vector.z\n        this.w *= vector.w\n\n        return this\n    }\n\n    divide(vector: vec4): vec4 {\n        this.x /= vector.x\n        this.y /= vector.y\n        this.z /= vector.z\n        this.w /= vector.w\n\n        return this\n    }\n\n    scale(value: number, dest?: vec4): vec4 {\n        if (!dest) { dest = this }\n\n        dest.x *= value\n        dest.y *= value\n        dest.z *= value\n        dest.w *= value\n\n        return dest\n    }\n\n    normalize(dest?: vec4): vec4 {\n        if (!dest) { dest = this }\n\n        let length = this.length()\n\n        if (length === 1) {\n            return this\n        }\n\n        if (length === 0) {\n            dest.x *= 0\n            dest.y *= 0\n            dest.z *= 0\n            dest.w *= 0\n\n            return dest\n        }\n\n        length = 1.0 / length\n\n        dest.x *= length\n        dest.y *= length\n        dest.z *= length\n        dest.w *= length\n\n        return dest\n    }\n\n    multiplyMat4(matrix: mat4, dest?: vec4): vec4 {\n        if (!dest) { dest = this }\n\n        return matrix.multiplyVec4(this, dest)\n    }\n\n    static mix(vector: vec4, vector2: vec4, time: number, dest?: vec4): vec4 {\n        if (!dest) { dest = new vec4() }\n\n        dest.x = vector.x + time * (vector2.x - vector.x)\n        dest.y = vector.y + time * (vector2.y - vector.y)\n        dest.z = vector.z + time * (vector2.z - vector.z)\n        dest.w = vector.w + time * (vector2.w - vector.w)\n\n        return dest\n    }\n\n    static sum(vector: vec4, vector2: vec4, dest?: vec4): vec4 {\n        if (!dest) { dest = new vec4() }\n\n        dest.x = vector.x + vector2.x\n        dest.y = vector.y + vector2.y\n        dest.z = vector.z + vector2.z\n        dest.w = vector.w + vector2.w\n\n        return dest\n    }\n\n    static difference(vector: vec4, vector2: vec4, dest?: vec4): vec4 {\n        if (!dest) { dest = new vec4() }\n\n        dest.x = vector.x - vector2.x\n        dest.y = vector.y - vector2.y\n        dest.z = vector.z - vector2.z\n        dest.w = vector.w - vector2.w\n\n        return dest\n    }\n\n    static product(vector: vec4, vector2: vec4, dest?: vec4): vec4 {\n        if (!dest) { dest = new vec4() }\n\n        dest.x = vector.x * vector2.x\n        dest.y = vector.y * vector2.y\n        dest.z = vector.z * vector2.z\n        dest.w = vector.w * vector2.w\n\n        return dest\n    }\n\n    static quotient(vector: vec4, vector2: vec4, dest?: vec4): vec4 {\n        if (!dest) { dest = new vec4() }\n\n        dest.x = vector.x / vector2.x\n        dest.y = vector.y / vector2.y\n        dest.z = vector.z / vector2.z\n        dest.w = vector.w / vector2.w\n\n        return dest\n    }\n}\n","import mat3 from './mat3'\nimport vec3 from './vec3'\nimport vec4 from './vec4'\n\nimport { epsilon } from './constants'\n\nexport default class mat4 {\n\n    constructor(values?: number[]) {\n        if (values !== undefined) {\n            this.init(values)\n        }\n    }\n\n    private values = new Float32Array(16)\n\n    static readonly identity = new mat4().setIdentity()\n\n    at(index: number): number {\n        return this.values[index]\n    }\n\n    init(values: number[]): mat4 {\n        for (let i = 0; i < 16; i++) {\n            this.values[i] = values[i]\n        }\n\n        return this\n    }\n\n    reset(): void {\n        for (let i = 0; i < 16; i++) {\n            this.values[i] = 0\n        }\n    }\n\n    copy(dest?: mat4): mat4 {\n        if (!dest) { dest = new mat4() }\n\n        for (let i = 0; i < 16; i++) {\n            dest.values[i] = this.values[i]\n        }\n\n        return dest\n    }\n\n    all(): number[] {\n        const data: number[] = []\n        for (let i = 0; i < 16; i++) {\n            data[i] = this.values[i]\n        }\n\n        return data\n    }\n\n    row(index: number): number[] {\n        return [\n            this.values[index * 4 + 0],\n            this.values[index * 4 + 1],\n            this.values[index * 4 + 2],\n            this.values[index * 4 + 3],\n        ]\n    }\n\n    col(index: number): number[] {\n        return [\n            this.values[index],\n            this.values[index + 4],\n            this.values[index + 8],\n            this.values[index + 12],\n        ]\n    }\n\n    equals(matrix: mat4, threshold = epsilon): boolean {\n        for (let i = 0; i < 16; i++) {\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n    determinant(): number {\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a03 = this.values[3]\n        const a10 = this.values[4]\n        const a11 = this.values[5]\n        const a12 = this.values[6]\n        const a13 = this.values[7]\n        const a20 = this.values[8]\n        const a21 = this.values[9]\n        const a22 = this.values[10]\n        const a23 = this.values[11]\n        const a30 = this.values[12]\n        const a31 = this.values[13]\n        const a32 = this.values[14]\n        const a33 = this.values[15]\n\n        const det00 = a00 * a11 - a01 * a10\n        const det01 = a00 * a12 - a02 * a10\n        const det02 = a00 * a13 - a03 * a10\n        const det03 = a01 * a12 - a02 * a11\n        const det04 = a01 * a13 - a03 * a11\n        const det05 = a02 * a13 - a03 * a12\n        const det06 = a20 * a31 - a21 * a30\n        const det07 = a20 * a32 - a22 * a30\n        const det08 = a20 * a33 - a23 * a30\n        const det09 = a21 * a32 - a22 * a31\n        const det10 = a21 * a33 - a23 * a31\n        const det11 = a22 * a33 - a23 * a32\n\n        return (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06)\n    }\n\n    setIdentity(): mat4 {\n        this.values[0] = 1\n        this.values[1] = 0\n        this.values[2] = 0\n        this.values[3] = 0\n        this.values[4] = 0\n        this.values[5] = 1\n        this.values[6] = 0\n        this.values[7] = 0\n        this.values[8] = 0\n        this.values[9] = 0\n        this.values[10] = 1\n        this.values[11] = 0\n        this.values[12] = 0\n        this.values[13] = 0\n        this.values[14] = 0\n        this.values[15] = 1\n\n        return this\n    }\n\n    transpose(): mat4 {\n        const temp01 = this.values[1]\n        const temp02 = this.values[2]\n        const temp03 = this.values[3]\n        const temp12 = this.values[6]\n        const temp13 = this.values[7]\n        const temp23 = this.values[11]\n\n        this.values[1] = this.values[4]\n        this.values[2] = this.values[8]\n        this.values[3] = this.values[12]\n        this.values[4] = temp01\n        this.values[6] = this.values[9]\n        this.values[7] = this.values[13]\n        this.values[8] = temp02\n        this.values[9] = temp12\n        this.values[11] = this.values[14]\n        this.values[12] = temp03\n        this.values[13] = temp13\n        this.values[14] = temp23\n\n        return this\n    }\n\n    inverse(): mat4 {\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a03 = this.values[3]\n        const a10 = this.values[4]\n        const a11 = this.values[5]\n        const a12 = this.values[6]\n        const a13 = this.values[7]\n        const a20 = this.values[8]\n        const a21 = this.values[9]\n        const a22 = this.values[10]\n        const a23 = this.values[11]\n        const a30 = this.values[12]\n        const a31 = this.values[13]\n        const a32 = this.values[14]\n        const a33 = this.values[15]\n\n        const det00 = a00 * a11 - a01 * a10\n        const det01 = a00 * a12 - a02 * a10\n        const det02 = a00 * a13 - a03 * a10\n        const det03 = a01 * a12 - a02 * a11\n        const det04 = a01 * a13 - a03 * a11\n        const det05 = a02 * a13 - a03 * a12\n        const det06 = a20 * a31 - a21 * a30\n        const det07 = a20 * a32 - a22 * a30\n        const det08 = a20 * a33 - a23 * a30\n        const det09 = a21 * a32 - a22 * a31\n        const det10 = a21 * a33 - a23 * a31\n        const det11 = a22 * a33 - a23 * a32\n\n        let det = (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06)\n\n        if (!det) {\n            return null\n        }\n\n        det = 1.0 / det\n\n        this.values[0] = (a11 * det11 - a12 * det10 + a13 * det09) * det\n        this.values[1] = (-a01 * det11 + a02 * det10 - a03 * det09) * det\n        this.values[2] = (a31 * det05 - a32 * det04 + a33 * det03) * det\n        this.values[3] = (-a21 * det05 + a22 * det04 - a23 * det03) * det\n        this.values[4] = (-a10 * det11 + a12 * det08 - a13 * det07) * det\n        this.values[5] = (a00 * det11 - a02 * det08 + a03 * det07) * det\n        this.values[6] = (-a30 * det05 + a32 * det02 - a33 * det01) * det\n        this.values[7] = (a20 * det05 - a22 * det02 + a23 * det01) * det\n        this.values[8] = (a10 * det10 - a11 * det08 + a13 * det06) * det\n        this.values[9] = (-a00 * det10 + a01 * det08 - a03 * det06) * det\n        this.values[10] = (a30 * det04 - a31 * det02 + a33 * det00) * det\n        this.values[11] = (-a20 * det04 + a21 * det02 - a23 * det00) * det\n        this.values[12] = (-a10 * det09 + a11 * det07 - a12 * det06) * det\n        this.values[13] = (a00 * det09 - a01 * det07 + a02 * det06) * det\n        this.values[14] = (-a30 * det03 + a31 * det01 - a32 * det00) * det\n        this.values[15] = (a20 * det03 - a21 * det01 + a22 * det00) * det\n\n        return this\n    }\n\n    multiply(matrix: mat4): mat4 {\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a03 = this.values[3]\n        const a10 = this.values[4]\n        const a11 = this.values[5]\n        const a12 = this.values[6]\n        const a13 = this.values[7]\n        const a20 = this.values[8]\n        const a21 = this.values[9]\n        const a22 = this.values[10]\n        const a23 = this.values[11]\n        const a30 = this.values[12]\n        const a31 = this.values[13]\n        const a32 = this.values[14]\n        const a33 = this.values[15]\n\n        let b0 = matrix.at(0)\n        let b1 = matrix.at(1)\n        let b2 = matrix.at(2)\n        let b3 = matrix.at(3)\n\n        this.values[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n        this.values[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n        this.values[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n        this.values[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n        b0 = matrix.at(4)\n        b1 = matrix.at(5)\n        b2 = matrix.at(6)\n        b3 = matrix.at(7)\n\n        this.values[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n        this.values[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n        this.values[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n        this.values[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n        b0 = matrix.at(8)\n        b1 = matrix.at(9)\n        b2 = matrix.at(10)\n        b3 = matrix.at(11)\n\n        this.values[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n        this.values[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n        this.values[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n        this.values[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n        b0 = matrix.at(12)\n        b1 = matrix.at(13)\n        b2 = matrix.at(14)\n        b3 = matrix.at(15)\n\n        this.values[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n        this.values[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n        this.values[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n        this.values[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n        return this\n    }\n\n    multiplyVec3(vector: vec3): vec3 {\n        const x = vector.x\n        const y = vector.y\n        const z = vector.z\n\n        return new vec3([\n            this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12],\n            this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13],\n            this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14],\n        ])\n    }\n\n    multiplyVec4(vector: vec4, dest?: vec4): vec4 {\n        if (!dest) { dest = new vec4() }\n\n        const x = vector.x\n        const y = vector.y\n        const z = vector.z\n        const w = vector.w\n\n        dest.x = this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12] * w\n        dest.y = this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13] * w\n        dest.z = this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14] * w\n        dest.w = this.values[3] * x + this.values[7] * y + this.values[11] * z + this.values[15] * w\n\n        return dest\n    }\n\n    toMat3(): mat3 {\n        return new mat3([\n            this.values[0],\n            this.values[1],\n            this.values[2],\n            this.values[4],\n            this.values[5],\n            this.values[6],\n            this.values[8],\n            this.values[9],\n            this.values[10],\n        ])\n    }\n\n    toInverseMat3(): mat3 {\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a10 = this.values[4]\n        const a11 = this.values[5]\n        const a12 = this.values[6]\n        const a20 = this.values[8]\n        const a21 = this.values[9]\n        const a22 = this.values[10]\n\n        const det01 = a22 * a11 - a12 * a21\n        const det11 = -a22 * a10 + a12 * a20\n        const det21 = a21 * a10 - a11 * a20\n\n        let det = a00 * det01 + a01 * det11 + a02 * det21\n\n        if (!det) {\n            return null\n        }\n\n        det = 1.0 / det\n\n        return new mat3([\n            det01 * det,\n            (-a22 * a01 + a02 * a21) * det,\n            (a12 * a01 - a02 * a11) * det,\n            det11 * det,\n            (a22 * a00 - a02 * a20) * det,\n            (-a12 * a00 + a02 * a10) * det,\n            det21 * det,\n            (-a21 * a00 + a01 * a20) * det,\n            (a11 * a00 - a01 * a10) * det,\n        ])\n    }\n\n    translate(vector: vec3): mat4 {\n        const x = vector.x\n        const y = vector.y\n        const z = vector.z\n\n        this.values[12] += this.values[0] * x + this.values[4] * y + this.values[8] * z\n        this.values[13] += this.values[1] * x + this.values[5] * y + this.values[9] * z\n        this.values[14] += this.values[2] * x + this.values[6] * y + this.values[10] * z\n        this.values[15] += this.values[3] * x + this.values[7] * y + this.values[11] * z\n\n        return this\n    }\n\n    scale(vector: vec3): mat4 {\n        const x = vector.x\n        const y = vector.y\n        const z = vector.z\n\n        this.values[0] *= x\n        this.values[1] *= x\n        this.values[2] *= x\n        this.values[3] *= x\n\n        this.values[4] *= y\n        this.values[5] *= y\n        this.values[6] *= y\n        this.values[7] *= y\n\n        this.values[8] *= z\n        this.values[9] *= z\n        this.values[10] *= z\n        this.values[11] *= z\n\n        return this\n    }\n\n    rotate(angle: number, axis: vec3): mat4 {\n        let x = axis.x\n        let y = axis.y\n        let z = axis.z\n\n        let length = Math.sqrt(x * x + y * y + z * z)\n\n        if (!length) {\n            return null\n        }\n\n        if (length !== 1) {\n            length = 1 / length\n            x *= length\n            y *= length\n            z *= length\n        }\n\n        const s = Math.sin(angle)\n        const c = Math.cos(angle)\n\n        const t = 1.0 - c\n\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a03 = this.values[3]\n\n        const a10 = this.values[4]\n        const a11 = this.values[5]\n        const a12 = this.values[6]\n        const a13 = this.values[7]\n\n        const a20 = this.values[8]\n        const a21 = this.values[9]\n        const a22 = this.values[10]\n        const a23 = this.values[11]\n\n        const b00 = x * x * t + c\n        const b01 = y * x * t + z * s\n        const b02 = z * x * t - y * s\n\n        const b10 = x * y * t - z * s\n        const b11 = y * y * t + c\n        const b12 = z * y * t + x * s\n\n        const b20 = x * z * t + y * s\n        const b21 = y * z * t - x * s\n        const b22 = z * z * t + c\n\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02\n        this.values[3] = a03 * b00 + a13 * b01 + a23 * b02\n\n        this.values[4] = a00 * b10 + a10 * b11 + a20 * b12\n        this.values[5] = a01 * b10 + a11 * b11 + a21 * b12\n        this.values[6] = a02 * b10 + a12 * b11 + a22 * b12\n        this.values[7] = a03 * b10 + a13 * b11 + a23 * b12\n\n        this.values[8] = a00 * b20 + a10 * b21 + a20 * b22\n        this.values[9] = a01 * b20 + a11 * b21 + a21 * b22\n        this.values[10] = a02 * b20 + a12 * b21 + a22 * b22\n        this.values[11] = a03 * b20 + a13 * b21 + a23 * b22\n\n        return this\n    }\n\n    static frustum(left: number, right: number, bottom: number, top: number, near: number, far: number): mat4 {\n        const rl = (right - left)\n        const tb = (top - bottom)\n        const fn = (far - near)\n\n        return new mat4([\n            (near * 2) / rl,\n            0,\n            0,\n            0,\n\n            0,\n            (near * 2) / tb,\n            0,\n            0,\n\n            (right + left) / rl,\n            (top + bottom) / tb,\n            -(far + near) / fn,\n            -1,\n\n            0,\n            0,\n            -(far * near * 2) / fn,\n            0,\n        ])\n    }\n\n    static perspective(fov: number, aspect: number, near: number, far: number): mat4 {\n        const top = near * Math.tan(fov * Math.PI / 360.0)\n        const right = top * aspect\n\n        return mat4.frustum(-right, right, -top, top, near, far)\n    }\n\n    static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): mat4 {\n        const rl = (right - left)\n        const tb = (top - bottom)\n        const fn = (far - near)\n\n        return new mat4([\n            2 / rl,\n            0,\n            0,\n            0,\n\n            0,\n            2 / tb,\n            0,\n            0,\n\n            0,\n            0,\n            -2 / fn,\n            0,\n\n            -(left + right) / rl,\n            -(top + bottom) / tb,\n            -(far + near) / fn,\n            1,\n        ])\n    }\n\n    static lookAt(position: vec3, target: vec3, up: vec3 = vec3.up): mat4 {\n        if (position.equals(target)) {\n            return this.identity\n        }\n\n        const z = vec3.difference(position, target).normalize()\n\n        const x = vec3.cross(up, z).normalize()\n        const y = vec3.cross(z, x).normalize()\n\n        return new mat4([\n            x.x,\n            y.x,\n            z.x,\n            0,\n\n            x.y,\n            y.y,\n            z.y,\n            0,\n\n            x.z,\n            y.z,\n            z.z,\n            0,\n\n            -vec3.dot(x, position),\n            -vec3.dot(y, position),\n            -vec3.dot(z, position),\n            1,\n        ])\n    }\n\n    static product(m1: mat4, m2: mat4, result: mat4): mat4 {\n        const a00 = m1.at(0)\n        const a01 = m1.at(1)\n        const a02 = m1.at(2)\n        const a03 = m1.at(3)\n        const a10 = m1.at(4)\n        const a11 = m1.at(5)\n        const a12 = m1.at(6)\n        const a13 = m1.at(7)\n        const a20 = m1.at(8)\n        const a21 = m1.at(9)\n        const a22 = m1.at(10)\n        const a23 = m1.at(11)\n        const a30 = m1.at(12)\n        const a31 = m1.at(13)\n        const a32 = m1.at(14)\n        const a33 = m1.at(15)\n\n        const b00 = m2.at(0)\n        const b01 = m2.at(1)\n        const b02 = m2.at(2)\n        const b03 = m2.at(3)\n        const b10 = m2.at(4)\n        const b11 = m2.at(5)\n        const b12 = m2.at(6)\n        const b13 = m2.at(7)\n        const b20 = m2.at(8)\n        const b21 = m2.at(9)\n        const b22 = m2.at(10)\n        const b23 = m2.at(11)\n        const b30 = m2.at(12)\n        const b31 = m2.at(13)\n        const b32 = m2.at(14)\n        const b33 = m2.at(15)\n\n        if (result) {\n            result.init([\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\n\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\n\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\n\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\n            ])\n\n            return result\n        } else {\n            return new mat4([\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\n\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\n\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\n\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\n            ])\n        }\n    }\n\n}\n","import mat4 from './mat4'\nimport quat from './quat'\nimport vec2 from './vec2'\nimport vec3 from './vec3'\n\nimport { epsilon } from './constants'\n\nexport default class mat3 {\n\n    constructor(values?: number[]) {\n        if (values !== undefined) {\n            this.init(values)\n        }\n    }\n\n    private values = new Float32Array(9)\n\n    static readonly identity = new mat3().setIdentity()\n\n    at(index: number): number {\n        return this.values[index]\n    }\n\n    init(values: number[]): mat3 {\n        for (let i = 0; i < 9; i++) {\n            this.values[i] = values[i]\n        }\n\n        return this\n    }\n\n    reset(): void {\n        for (let i = 0; i < 9; i++) {\n            this.values[i] = 0\n        }\n    }\n\n    copy(dest?: mat3): mat3 {\n        if (!dest) { dest = new mat3() }\n\n        for (let i = 0; i < 9; i++) {\n            dest.values[i] = this.values[i]\n        }\n\n        return dest\n    }\n\n    all(): number[] {\n        const data: number[] = []\n        for (let i = 0; i < 9; i++) {\n            data[i] = this.values[i]\n        }\n\n        return data\n    }\n\n    row(index: number): number[] {\n        return [\n            this.values[index * 3 + 0],\n            this.values[index * 3 + 1],\n            this.values[index * 3 + 2],\n        ]\n    }\n\n    col(index: number): number[] {\n        return [\n            this.values[index],\n            this.values[index + 3],\n            this.values[index + 6],\n        ]\n    }\n\n    equals(matrix: mat3, threshold = epsilon): boolean {\n        for (let i = 0; i < 9; i++) {\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n    determinant(): number {\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a10 = this.values[3]\n        const a11 = this.values[4]\n        const a12 = this.values[5]\n        const a20 = this.values[6]\n        const a21 = this.values[7]\n        const a22 = this.values[8]\n\n        const det01 = a22 * a11 - a12 * a21\n        const det11 = -a22 * a10 + a12 * a20\n        const det21 = a21 * a10 - a11 * a20\n\n        return a00 * det01 + a01 * det11 + a02 * det21\n    }\n\n    setIdentity(): mat3 {\n        this.values[0] = 1\n        this.values[1] = 0\n        this.values[2] = 0\n        this.values[3] = 0\n        this.values[4] = 1\n        this.values[5] = 0\n        this.values[6] = 0\n        this.values[7] = 0\n        this.values[8] = 1\n\n        return this\n    }\n\n    transpose(): mat3 {\n        const temp01 = this.values[1]\n        const temp02 = this.values[2]\n        const temp12 = this.values[5]\n\n        this.values[1] = this.values[3]\n        this.values[2] = this.values[6]\n        this.values[3] = temp01\n        this.values[5] = this.values[7]\n        this.values[6] = temp02\n        this.values[7] = temp12\n\n        return this\n    }\n\n    inverse(): mat3 {\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a10 = this.values[3]\n        const a11 = this.values[4]\n        const a12 = this.values[5]\n        const a20 = this.values[6]\n        const a21 = this.values[7]\n        const a22 = this.values[8]\n\n        const det01 = a22 * a11 - a12 * a21\n        const det11 = -a22 * a10 + a12 * a20\n        const det21 = a21 * a10 - a11 * a20\n\n        let det = a00 * det01 + a01 * det11 + a02 * det21\n\n        if (!det) {\n            return null\n        }\n\n        det = 1.0 / det\n\n        this.values[0] = det01 * det\n        this.values[1] = (-a22 * a01 + a02 * a21) * det\n        this.values[2] = (a12 * a01 - a02 * a11) * det\n        this.values[3] = det11 * det\n        this.values[4] = (a22 * a00 - a02 * a20) * det\n        this.values[5] = (-a12 * a00 + a02 * a10) * det\n        this.values[6] = det21 * det\n        this.values[7] = (-a21 * a00 + a01 * a20) * det\n        this.values[8] = (a11 * a00 - a01 * a10) * det\n\n        return this\n    }\n\n    multiply(matrix: mat3): mat3 {\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a10 = this.values[3]\n        const a11 = this.values[4]\n        const a12 = this.values[5]\n        const a20 = this.values[6]\n        const a21 = this.values[7]\n        const a22 = this.values[8]\n\n        const b00 = matrix.at(0)\n        const b01 = matrix.at(1)\n        const b02 = matrix.at(2)\n        const b10 = matrix.at(3)\n        const b11 = matrix.at(4)\n        const b12 = matrix.at(5)\n        const b20 = matrix.at(6)\n        const b21 = matrix.at(7)\n        const b22 = matrix.at(8)\n\n        this.values[0] = b00 * a00 + b01 * a10 + b02 * a20\n        this.values[1] = b00 * a01 + b01 * a11 + b02 * a21\n        this.values[2] = b00 * a02 + b01 * a12 + b02 * a22\n\n        this.values[3] = b10 * a00 + b11 * a10 + b12 * a20\n        this.values[4] = b10 * a01 + b11 * a11 + b12 * a21\n        this.values[5] = b10 * a02 + b11 * a12 + b12 * a22\n\n        this.values[6] = b20 * a00 + b21 * a10 + b22 * a20\n        this.values[7] = b20 * a01 + b21 * a11 + b22 * a21\n        this.values[8] = b20 * a02 + b21 * a12 + b22 * a22\n\n        return this\n    }\n\n    multiplyVec2(vector: vec2, result: vec2): vec2 {\n        const x = vector.x\n        const y = vector.y\n\n        if (result) {\n            result.xy = [\n                x * this.values[0] + y * this.values[3] + this.values[6],\n                x * this.values[1] + y * this.values[4] + this.values[7],\n            ]\n\n            return result\n        } else {\n            return new vec2([\n                x * this.values[0] + y * this.values[3] + this.values[6],\n                x * this.values[1] + y * this.values[4] + this.values[7],\n            ])\n        }\n    }\n\n    multiplyVec3(vector: vec3, result: vec3): vec3 {\n        const x = vector.x\n        const y = vector.y\n        const z = vector.z\n\n        if (result) {\n            result.xyz = [\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\n            ]\n\n            return result\n        } else {\n            return new vec3([\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\n            ])\n        }\n    }\n\n    toMat4(result: mat4): mat4 {\n        if (result) {\n            result.init([\n                this.values[0],\n                this.values[1],\n                this.values[2],\n                0,\n\n                this.values[3],\n                this.values[4],\n                this.values[5],\n                0,\n\n                this.values[6],\n                this.values[7],\n                this.values[8],\n                0,\n\n                0,\n                0,\n                0,\n                1,\n            ])\n\n            return result\n        } else {\n            return new mat4([\n                this.values[0],\n                this.values[1],\n                this.values[2],\n                0,\n\n                this.values[3],\n                this.values[4],\n                this.values[5],\n                0,\n\n                this.values[6],\n                this.values[7],\n                this.values[8],\n                0,\n\n                0,\n                0,\n                0,\n                1,\n            ])\n        }\n    }\n\n    toQuat(): quat {\n        const m00 = this.values[0]\n        const m01 = this.values[1]\n        const m02 = this.values[2]\n        const m10 = this.values[3]\n        const m11 = this.values[4]\n        const m12 = this.values[5]\n        const m20 = this.values[6]\n        const m21 = this.values[7]\n        const m22 = this.values[8]\n\n        const fourXSquaredMinus1 = m00 - m11 - m22\n        const fourYSquaredMinus1 = m11 - m00 - m22\n        const fourZSquaredMinus1 = m22 - m00 - m11\n        const fourWSquaredMinus1 = m00 + m11 + m22\n\n        let biggestIndex = 0\n\n        let fourBiggestSquaredMinus1 = fourWSquaredMinus1\n\n        if (fourXSquaredMinus1 > fourBiggestSquaredMinus1) {\n            fourBiggestSquaredMinus1 = fourXSquaredMinus1\n            biggestIndex = 1\n        }\n\n        if (fourYSquaredMinus1 > fourBiggestSquaredMinus1) {\n            fourBiggestSquaredMinus1 = fourYSquaredMinus1\n            biggestIndex = 2\n        }\n\n        if (fourZSquaredMinus1 > fourBiggestSquaredMinus1) {\n            fourBiggestSquaredMinus1 = fourZSquaredMinus1\n            biggestIndex = 3\n        }\n\n        const biggestVal = Math.sqrt(fourBiggestSquaredMinus1 + 1) * 0.5\n        const mult = 0.25 / biggestVal\n\n        const result = new quat()\n\n        switch (biggestIndex) {\n            case 0:\n\n                result.w = biggestVal\n                result.x = (m12 - m21) * mult\n                result.y = (m20 - m02) * mult\n                result.z = (m01 - m10) * mult\n\n                break\n\n            case 1:\n\n                result.w = (m12 - m21) * mult\n                result.x = biggestVal\n                result.y = (m01 + m10) * mult\n                result.z = (m20 + m02) * mult\n\n                break\n\n            case 2:\n\n                result.w = (m20 - m02) * mult\n                result.x = (m01 + m10) * mult\n                result.y = biggestVal\n                result.z = (m12 + m21) * mult\n\n                break\n\n            case 3:\n\n                result.w = (m01 - m10) * mult\n                result.x = (m20 + m02) * mult\n                result.y = (m12 + m21) * mult\n                result.z = biggestVal\n\n                break\n        }\n\n        return result\n    }\n\n    rotate(angle: number, axis: vec3): mat3 {\n        let x = axis.x\n        let y = axis.y\n        let z = axis.z\n\n        let length = Math.sqrt(x * x + y * y + z * z)\n\n        if (!length) {\n            return null\n        }\n\n        if (length !== 1) {\n            length = 1 / length\n            x *= length\n            y *= length\n            z *= length\n        }\n\n        const s = Math.sin(angle)\n        const c = Math.cos(angle)\n\n        const t = 1.0 - c\n\n        const a00 = this.values[0]\n        const a01 = this.values[1]\n        const a02 = this.values[2]\n        const a10 = this.values[4]\n        const a11 = this.values[5]\n        const a12 = this.values[6]\n        const a20 = this.values[8]\n        const a21 = this.values[9]\n        const a22 = this.values[10]\n\n        const b00 = x * x * t + c\n        const b01 = y * x * t + z * s\n        const b02 = z * x * t - y * s\n        const b10 = x * y * t - z * s\n        const b11 = y * y * t + c\n        const b12 = z * y * t + x * s\n        const b20 = x * z * t + y * s\n        const b21 = y * z * t - x * s\n        const b22 = z * z * t + c\n\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02\n\n        this.values[3] = a00 * b10 + a10 * b11 + a20 * b12\n        this.values[4] = a01 * b10 + a11 * b11 + a21 * b12\n        this.values[5] = a02 * b10 + a12 * b11 + a22 * b12\n\n        this.values[6] = a00 * b20 + a10 * b21 + a20 * b22\n        this.values[7] = a01 * b20 + a11 * b21 + a21 * b22\n        this.values[8] = a02 * b20 + a12 * b21 + a22 * b22\n\n        return this\n    }\n\n    static product(m1: mat3, m2: mat3, result: mat3): mat3 {\n        const a00 = m1.at(0)\n        const a01 = m1.at(1)\n        const a02 = m1.at(2)\n        const a10 = m1.at(3)\n        const a11 = m1.at(4)\n        const a12 = m1.at(5)\n        const a20 = m1.at(6)\n        const a21 = m1.at(7)\n        const a22 = m1.at(8)\n\n        const b00 = m2.at(0)\n        const b01 = m2.at(1)\n        const b02 = m2.at(2)\n        const b10 = m2.at(3)\n        const b11 = m2.at(4)\n        const b12 = m2.at(5)\n        const b20 = m2.at(6)\n        const b21 = m2.at(7)\n        const b22 = m2.at(8)\n\n        if (result) {\n            result.init([\n                b00 * a00 + b01 * a10 + b02 * a20,\n                b00 * a01 + b01 * a11 + b02 * a21,\n                b00 * a02 + b01 * a12 + b02 * a22,\n\n                b10 * a00 + b11 * a10 + b12 * a20,\n                b10 * a01 + b11 * a11 + b12 * a21,\n                b10 * a02 + b11 * a12 + b12 * a22,\n\n                b20 * a00 + b21 * a10 + b22 * a20,\n                b20 * a01 + b21 * a11 + b22 * a21,\n                b20 * a02 + b21 * a12 + b22 * a22,\n            ])\n\n            return result\n        } else {\n            return new mat3([\n                b00 * a00 + b01 * a10 + b02 * a20,\n                b00 * a01 + b01 * a11 + b02 * a21,\n                b00 * a02 + b01 * a12 + b02 * a22,\n\n                b10 * a00 + b11 * a10 + b12 * a20,\n                b10 * a01 + b11 * a11 + b12 * a21,\n                b10 * a02 + b11 * a12 + b12 * a22,\n\n                b20 * a00 + b21 * a10 + b22 * a20,\n                b20 * a01 + b21 * a11 + b22 * a21,\n                b20 * a02 + b21 * a12 + b22 * a22,\n            ])\n        }\n    }\n\n}\n","import mat3 from './mat3'\nimport mat4 from './mat4'\nimport vec3 from './vec3'\n\nimport { epsilon } from './constants'\n\nexport default class quat {\n\n    get x(): number {\n        return this.values[0]\n    }\n\n    get y(): number {\n        return this.values[1]\n    }\n\n    get z(): number {\n        return this.values[2]\n    }\n\n    get w(): number {\n        return this.values[3]\n    }\n\n    get xy(): [number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n        ]\n    }\n\n    get xyz(): [number, number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n        ]\n    }\n\n    get xyzw(): [number, number, number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n            this.values[3],\n        ]\n    }\n\n    set x(value: number) {\n        this.values[0] = value\n    }\n\n    set y(value: number) {\n        this.values[1] = value\n    }\n\n    set z(value: number) {\n        this.values[2] = value\n    }\n\n    set w(value: number) {\n        this.values[3] = value\n    }\n\n    set xy(values: [number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n    }\n\n    set xyz(values: [number, number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n        this.values[2] = values[2]\n    }\n\n    set xyzw(values: [number, number, number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n        this.values[2] = values[2]\n        this.values[3] = values[3]\n    }\n\n    constructor(values?: [number, number, number, number]) {\n        if (values !== undefined) {\n            this.xyzw = values\n        }\n    }\n\n    private values = new Float32Array(4)\n\n    static readonly identity = new quat().setIdentity()\n\n    at(index: number): number {\n        return this.values[index]\n    }\n\n    reset(): void {\n        for (let i = 0; i < 4; i++) {\n            this.values[i] = 0\n        }\n    }\n\n    copy(dest?: quat): quat {\n        if (!dest) { dest = new quat() }\n\n        for (let i = 0; i < 4; i++) {\n            dest.values[i] = this.values[i]\n        }\n\n        return dest\n    }\n\n    roll(): number {\n        const x = this.x\n        const y = this.y\n        const z = this.z\n        const w = this.w\n\n        return Math.atan2(2.0 * (x * y + w * z), w * w + x * x - y * y - z * z)\n    }\n\n    pitch(): number {\n        const x = this.x\n        const y = this.y\n        const z = this.z\n        const w = this.w\n\n        return Math.atan2(2.0 * (y * z + w * x), w * w - x * x - y * y + z * z)\n    }\n\n    yaw(): number {\n        return Math.asin(2.0 * (this.x * this.z - this.w * this.y))\n    }\n\n    equals(vector: quat, threshold = epsilon): boolean {\n        for (let i = 0; i < 4; i++) {\n            if (Math.abs(this.values[i] - vector.at(i)) > threshold) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n    setIdentity(): quat {\n        this.x = 0\n        this.y = 0\n        this.z = 0\n        this.w = 1\n\n        return this\n    }\n\n    calculateW(): quat {\n        const x = this.x\n        const y = this.y\n        const z = this.z\n\n        this.w = -(Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z)))\n\n        return this\n    }\n\n    inverse(): quat {\n        const dot = quat.dot(this, this)\n\n        if (!dot) {\n            this.xyzw = [0, 0, 0, 0]\n\n            return this\n        }\n\n        const invDot = dot ? 1.0 / dot : 0\n\n        this.x *= -invDot\n        this.y *= -invDot\n        this.z *= -invDot\n        this.w *= invDot\n\n        return this\n    }\n\n    conjugate(): quat {\n        this.values[0] *= -1\n        this.values[1] *= -1\n        this.values[2] *= -1\n\n        return this\n    }\n\n    length(): number {\n        const x = this.x\n        const y = this.y\n        const z = this.z\n        const w = this.w\n\n        return Math.sqrt(x * x + y * y + z * z + w * w)\n    }\n\n    normalize(dest?: quat): quat {\n        if (!dest) { dest = this }\n\n        const x = this.x\n        const y = this.y\n        const z = this.z\n        const w = this.w\n\n        let length = Math.sqrt(x * x + y * y + z * z + w * w)\n\n        if (!length) {\n            dest.x = 0\n            dest.y = 0\n            dest.z = 0\n            dest.w = 0\n\n            return dest\n        }\n\n        length = 1 / length\n\n        dest.x = x * length\n        dest.y = y * length\n        dest.z = z * length\n        dest.w = w * length\n\n        return dest\n    }\n\n    add(other: quat): quat {\n        for (let i = 0; i < 4; i++) {\n            this.values[i] += other.at(i)\n        }\n\n        return this\n    }\n\n    multiply(other: quat): quat {\n        const q1x = this.values[0]\n        const q1y = this.values[1]\n        const q1z = this.values[2]\n        const q1w = this.values[3]\n\n        const q2x = other.x\n        const q2y = other.y\n        const q2z = other.z\n        const q2w = other.w\n\n        this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y\n        this.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z\n        this.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x\n        this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z\n\n        return this\n    }\n\n    multiplyVec3(vector: vec3, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        const x = vector.x\n        const y = vector.y\n        const z = vector.z\n\n        const qx = this.x\n        const qy = this.y\n        const qz = this.z\n        const qw = this.w\n\n        const ix = qw * x + qy * z - qz * y\n        const iy = qw * y + qz * x - qx * z\n        const iz = qw * z + qx * y - qy * x\n        const iw = -qx * x - qy * y - qz * z\n\n        dest.x = ix * qw + iw * -qx + iy * -qz - iz * -qy\n        dest.y = iy * qw + iw * -qy + iz * -qx - ix * -qz\n        dest.z = iz * qw + iw * -qz + ix * -qy - iy * -qx\n\n        return dest\n    }\n\n    toMat3(dest?: mat3): mat3 {\n        if (!dest) { dest = new mat3() }\n\n        const x = this.x\n        const y = this.y\n        const z = this.z\n        const w = this.w\n\n        const x2 = x + x\n        const y2 = y + y\n        const z2 = z + z\n\n        const xx = x * x2\n        const xy = x * y2\n        const xz = x * z2\n        const yy = y * y2\n        const yz = y * z2\n        const zz = z * z2\n        const wx = w * x2\n        const wy = w * y2\n        const wz = w * z2\n\n        dest.init([\n            1 - (yy + zz),\n            xy + wz,\n            xz - wy,\n\n            xy - wz,\n            1 - (xx + zz),\n            yz + wx,\n\n            xz + wy,\n            yz - wx,\n            1 - (xx + yy),\n        ])\n\n        return dest\n    }\n\n    toMat4(dest?: mat4): mat4 {\n        if (!dest) { dest = new mat4() }\n\n        const x = this.x\n        const y = this.y\n        const z = this.z\n        const w = this.w\n\n        const x2 = x + x\n        const y2 = y + y\n        const z2 = z + z\n\n        const xx = x * x2\n        const xy = x * y2\n        const xz = x * z2\n        const yy = y * y2\n        const yz = y * z2\n        const zz = z * z2\n        const wx = w * x2\n        const wy = w * y2\n        const wz = w * z2\n\n        dest.init([\n            1 - (yy + zz),\n            xy + wz,\n            xz - wy,\n            0,\n\n            xy - wz,\n            1 - (xx + zz),\n            yz + wx,\n            0,\n\n            xz + wy,\n            yz - wx,\n            1 - (xx + yy),\n            0,\n\n            0,\n            0,\n            0,\n            1,\n        ])\n\n        return dest\n    }\n\n    static dot(q1: quat, q2: quat): number {\n        return q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w\n    }\n\n    static sum(q1: quat, q2: quat, dest?: quat): quat {\n        if (!dest) { dest = new quat() }\n\n        dest.x = q1.x + q2.x\n        dest.y = q1.y + q2.y\n        dest.z = q1.z + q2.z\n        dest.w = q1.w + q2.w\n\n        return dest\n    }\n\n    static product(q1: quat, q2: quat, dest?: quat): quat {\n        if (!dest) { dest = new quat() }\n\n        const q1x = q1.x\n        const q1y = q1.y\n        const q1z = q1.z\n        const q1w = q1.w\n\n        const q2x = q2.x\n        const q2y = q2.y\n        const q2z = q2.z\n        const q2w = q2.w\n\n        dest.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y\n        dest.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z\n        dest.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x\n        dest.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z\n\n        return dest\n    }\n\n    static cross(q1: quat, q2: quat, dest?: quat): quat {\n        if (!dest) { dest = new quat() }\n\n        const q1x = q1.x\n        const q1y = q1.y\n        const q1z = q1.z\n        const q1w = q1.w\n\n        const q2x = q2.x\n        const q2y = q2.y\n        const q2z = q2.z\n        const q2w = q2.w\n\n        dest.x = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x\n        dest.y = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z\n        dest.z = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y\n        dest.w = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z\n\n        return dest\n    }\n\n    static shortMix(q1: quat, q2: quat, time: number, dest?: quat): quat {\n        if (!dest) { dest = new quat() }\n\n        if (time <= 0.0) {\n            dest.xyzw = q1.xyzw\n\n            return dest\n        } else if (time >= 1.0) {\n            dest.xyzw = q2.xyzw\n\n            return dest\n        }\n\n        let cos = quat.dot(q1, q2)\n        const q2a = q2.copy()\n\n        if (cos < 0.0) {\n            q2a.inverse()\n            cos = -cos\n        }\n\n        let k0: number\n        let k1: number\n\n        if (cos > 0.9999) {\n            k0 = 1 - time\n            k1 = 0 + time\n        } else {\n            const sin: number = Math.sqrt(1 - cos * cos)\n            const angle: number = Math.atan2(sin, cos)\n\n            const oneOverSin: number = 1 / sin\n\n            k0 = Math.sin((1 - time) * angle) * oneOverSin\n            k1 = Math.sin((0 + time) * angle) * oneOverSin\n        }\n\n        dest.x = k0 * q1.x + k1 * q2a.x\n        dest.y = k0 * q1.y + k1 * q2a.y\n        dest.z = k0 * q1.z + k1 * q2a.z\n        dest.w = k0 * q1.w + k1 * q2a.w\n\n        return dest\n    }\n\n    static mix(q1: quat, q2: quat, time: number, dest?: quat): quat {\n        if (!dest) { dest = new quat() }\n\n        const cosHalfTheta = q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w\n\n        if (Math.abs(cosHalfTheta) >= 1.0) {\n            dest.xyzw = q1.xyzw\n\n            return dest\n        }\n\n        const halfTheta = Math.acos(cosHalfTheta)\n        const sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta)\n\n        if (Math.abs(sinHalfTheta) < 0.001) {\n            dest.x = q1.x * 0.5 + q2.x * 0.5\n            dest.y = q1.y * 0.5 + q2.y * 0.5\n            dest.z = q1.z * 0.5 + q2.z * 0.5\n            dest.w = q1.w * 0.5 + q2.w * 0.5\n\n            return dest\n        }\n\n        const ratioA = Math.sin((1 - time) * halfTheta) / sinHalfTheta\n        const ratioB = Math.sin(time * halfTheta) / sinHalfTheta\n\n        dest.x = q1.x * ratioA + q2.x * ratioB\n        dest.y = q1.y * ratioA + q2.y * ratioB\n        dest.z = q1.z * ratioA + q2.z * ratioB\n        dest.w = q1.w * ratioA + q2.w * ratioB\n\n        return dest\n    }\n\n    static fromAxisAngle(axis: vec3, angle: number, dest?: quat): quat {\n        if (!dest) { dest = new quat() }\n\n        angle *= 0.5\n        const sin = Math.sin(angle)\n\n        dest.x = axis.x * sin\n        dest.y = axis.y * sin\n        dest.z = axis.z * sin\n        dest.w = Math.cos(angle)\n\n        return dest\n    }\n\n}\n","import mat3 from './mat3'\nimport quat from './quat'\n\nimport { epsilon } from './constants'\n\nexport default class vec3 {\n\n    get x(): number {\n        return this.values[0]\n    }\n\n    get y(): number {\n        return this.values[1]\n    }\n\n    get z(): number {\n        return this.values[2]\n    }\n\n    get xy(): [number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n        ]\n    }\n\n    get xyz(): [number, number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n        ]\n    }\n\n    set x(value: number) {\n        this.values[0] = value\n    }\n\n    set y(value: number) {\n        this.values[1] = value\n    }\n\n    set z(value: number) {\n        this.values[2] = value\n    }\n\n    set xy(values: [number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n    }\n\n    set xyz(values: [number, number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n        this.values[2] = values[2]\n    }\n\n    constructor(values?: [number, number, number]) {\n        if (values !== undefined) {\n            this.xyz = values\n        }\n    }\n\n    private values = new Float32Array(3)\n\n    static readonly zero = new vec3([0, 0, 0])\n    static readonly one = new vec3([1, 1, 1])\n\n    static readonly up = new vec3([0, 1, 0])\n    static readonly right = new vec3([1, 0, 0])\n    static readonly forward = new vec3([0, 0, 1])\n\n    at(index: number): number {\n        return this.values[index]\n    }\n\n    reset(): void {\n        this.x = 0\n        this.y = 0\n        this.z = 0\n    }\n\n    copy(dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        dest.x = this.x\n        dest.y = this.y\n        dest.z = this.z\n\n        return dest\n    }\n\n    negate(dest?: vec3): vec3 {\n        if (!dest) { dest = this }\n\n        dest.x = -this.x\n        dest.y = -this.y\n        dest.z = -this.z\n\n        return dest\n    }\n\n    equals(vector: vec3, threshold = epsilon): boolean {\n        if (Math.abs(this.x - vector.x) > threshold) {\n            return false\n        }\n\n        if (Math.abs(this.y - vector.y) > threshold) {\n            return false\n        }\n\n        if (Math.abs(this.z - vector.z) > threshold) {\n            return false\n        }\n\n        return true\n    }\n\n    length(): number {\n        return Math.sqrt(this.squaredLength())\n    }\n\n    squaredLength(): number {\n        const x = this.x\n        const y = this.y\n        const z = this.z\n\n        return (x * x + y * y + z * z)\n    }\n\n    add(vector: vec3): vec3 {\n        this.x += vector.x\n        this.y += vector.y\n        this.z += vector.z\n\n        return this\n    }\n\n    subtract(vector: vec3): vec3 {\n        this.x -= vector.x\n        this.y -= vector.y\n        this.z -= vector.z\n\n        return this\n    }\n\n    multiply(vector: vec3): vec3 {\n        this.x *= vector.x\n        this.y *= vector.y\n        this.z *= vector.z\n\n        return this\n    }\n\n    divide(vector: vec3): vec3 {\n        this.x /= vector.x\n        this.y /= vector.y\n        this.z /= vector.z\n\n        return this\n    }\n\n    scale(value: number, dest?: vec3): vec3 {\n        if (!dest) { dest = this }\n\n        dest.x *= value\n        dest.y *= value\n        dest.z *= value\n\n        return dest\n    }\n\n    normalize(dest?: vec3): vec3 {\n        if (!dest) { dest = this }\n\n        let length = this.length()\n\n        if (length === 1) {\n            return this\n        }\n\n        if (length === 0) {\n            dest.x = 0\n            dest.y = 0\n            dest.z = 0\n\n            return dest\n        }\n\n        length = 1.0 / length\n\n        dest.x *= length\n        dest.y *= length\n        dest.z *= length\n\n        return dest\n    }\n\n    multiplyByMat3(matrix: mat3, dest?: vec3): vec3 {\n        if (!dest) { dest = this }\n\n        return matrix.multiplyVec3(this, dest)\n    }\n\n    multiplyByQuat(quaternion: quat, dest?: vec3): vec3 {\n        if (!dest) { dest = this }\n\n        return quaternion.multiplyVec3(this, dest)\n    }\n\n    toQuat(dest?: quat): quat {\n        if (!dest) { dest = new quat() }\n\n        const c = new vec3()\n        const s = new vec3()\n\n        c.x = Math.cos(this.x * 0.5)\n        s.x = Math.sin(this.x * 0.5)\n\n        c.y = Math.cos(this.y * 0.5)\n        s.y = Math.sin(this.y * 0.5)\n\n        c.z = Math.cos(this.z * 0.5)\n        s.z = Math.sin(this.z * 0.5)\n\n        dest.x = s.x * c.y * c.z - c.x * s.y * s.z\n        dest.y = c.x * s.y * c.z + s.x * c.y * s.z\n        dest.z = c.x * c.y * s.z - s.x * s.y * c.z\n        dest.w = c.x * c.y * c.z + s.x * s.y * s.z\n\n        return dest\n    }\n\n    static cross(vector: vec3, vector2: vec3, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        const x = vector.x\n        const y = vector.y\n        const z = vector.z\n\n        const x2 = vector2.x\n        const y2 = vector2.y\n        const z2 = vector2.z\n\n        dest.x = y * z2 - z * y2\n        dest.y = z * x2 - x * z2\n        dest.z = x * y2 - y * x2\n\n        return dest\n    }\n\n    static dot(vector: vec3, vector2: vec3): number {\n        const x = vector.x\n        const y = vector.y\n        const z = vector.z\n\n        const x2 = vector2.x\n        const y2 = vector2.y\n        const z2 = vector2.z\n\n        return (x * x2 + y * y2 + z * z2)\n    }\n\n    static distance(vector: vec3, vector2: vec3): number {\n        const x = vector2.x - vector.x\n        const y = vector2.y - vector.y\n        const z = vector2.z - vector.z\n\n        return Math.sqrt(this.squaredDistance(vector, vector2))\n    }\n\n    static squaredDistance(vector: vec3, vector2: vec3): number {\n        const x = vector2.x - vector.x\n        const y = vector2.y - vector.y\n        const z = vector2.z - vector.z\n\n        return (x * x + y * y + z * z)\n    }\n\n    static direction(vector: vec3, vector2: vec3, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        const x = vector.x - vector2.x\n        const y = vector.y - vector2.y\n        const z = vector.z - vector2.z\n\n        let length = Math.sqrt(x * x + y * y + z * z)\n\n        if (length === 0) {\n            dest.x = 0\n            dest.y = 0\n            dest.z = 0\n\n            return dest\n        }\n\n        length = 1 / length\n\n        dest.x = x * length\n        dest.y = y * length\n        dest.z = z * length\n\n        return dest\n    }\n\n    static mix(vector: vec3, vector2: vec3, time: number, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        dest.x = vector.x + time * (vector2.x - vector.x)\n        dest.y = vector.y + time * (vector2.y - vector.y)\n        dest.z = vector.z + time * (vector2.z - vector.z)\n\n        return dest\n    }\n\n    static sum(vector: vec3, vector2: vec3, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        dest.x = vector.x + vector2.x\n        dest.y = vector.y + vector2.y\n        dest.z = vector.z + vector2.z\n\n        return dest\n    }\n\n    static difference(vector: vec3, vector2: vec3, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        dest.x = vector.x - vector2.x\n        dest.y = vector.y - vector2.y\n        dest.z = vector.z - vector2.z\n\n        return dest\n    }\n\n    static product(vector: vec3, vector2: vec3, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        dest.x = vector.x * vector2.x\n        dest.y = vector.y * vector2.y\n        dest.z = vector.z * vector2.z\n\n        return dest\n    }\n\n    static quotient(vector: vec3, vector2: vec3, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        dest.x = vector.x / vector2.x\n        dest.y = vector.y / vector2.y\n        dest.z = vector.z / vector2.z\n\n        return dest\n    }\n}\n","import mat2 from './mat2'\nimport mat3 from './mat3'\nimport vec3 from './vec3'\n\nimport { epsilon } from './constants'\n\nexport default class vec2 {\n\n    get x(): number {\n        return this.values[0]\n    }\n\n    get y(): number {\n        return this.values[1]\n    }\n\n    get xy(): [number, number] {\n        return [\n            this.values[0],\n            this.values[1],\n        ]\n    }\n\n    set x(value: number) {\n        this.values[0] = value\n    }\n\n    set y(value: number) {\n        this.values[1] = value\n    }\n\n    set xy(values: [number, number]) {\n        this.values[0] = values[0]\n        this.values[1] = values[1]\n    }\n\n    constructor(values?: [number, number]) {\n        if (values !== undefined) {\n            this.xy = values\n        }\n    }\n\n    private values = new Float32Array(2)\n\n    static readonly zero = new vec2([0, 0])\n    static readonly one = new vec2([1, 1])\n\n    at(index: number): number {\n        return this.values[index]\n    }\n\n    reset(): void {\n        this.x = 0\n        this.y = 0\n    }\n\n    copy(dest?: vec2): vec2 {\n        if (!dest) { dest = new vec2() }\n\n        dest.x = this.x\n        dest.y = this.y\n\n        return dest\n    }\n\n    negate(dest?: vec2): vec2 {\n        if (!dest) { dest = this }\n\n        dest.x = -this.x\n        dest.y = -this.y\n\n        return dest\n    }\n\n    equals(vector: vec2, threshold = epsilon): boolean {\n        if (Math.abs(this.x - vector.x) > threshold) {\n            return false\n        }\n\n        if (Math.abs(this.y - vector.y) > threshold) {\n            return false\n        }\n\n        return true\n    }\n\n    length(): number {\n        return Math.sqrt(this.squaredLength())\n    }\n\n    squaredLength(): number {\n        const x = this.x\n        const y = this.y\n\n        return (x * x + y * y)\n    }\n\n    add(vector: vec2): vec2 {\n        this.x += vector.x\n        this.y += vector.y\n\n        return this\n    }\n\n    subtract(vector: vec2): vec2 {\n        this.x -= vector.x\n        this.y -= vector.y\n\n        return this\n    }\n\n    multiply(vector: vec2): vec2 {\n        this.x *= vector.x\n        this.y *= vector.y\n\n        return this\n    }\n\n    divide(vector: vec2): vec2 {\n        this.x /= vector.x\n        this.y /= vector.y\n\n        return this\n    }\n\n    scale(value: number, dest?: vec2): vec2 {\n        if (!dest) { dest = this }\n\n        dest.x *= value\n        dest.y *= value\n\n        return dest\n    }\n\n    normalize(dest?: vec2): vec2 {\n        if (!dest) { dest = this }\n\n        let length = this.length()\n\n        if (length === 1) {\n            return this\n        }\n\n        if (length === 0) {\n            dest.x = 0\n            dest.y = 0\n\n            return dest\n        }\n\n        length = 1.0 / length\n\n        dest.x *= length\n        dest.y *= length\n\n        return dest\n    }\n\n    multiplyMat2(matrix: mat2, dest?: vec2): vec2 {\n        if (!dest) { dest = this }\n\n        return matrix.multiplyVec2(this, dest)\n    }\n\n    multiplyMat3(matrix: mat3, dest?: vec2): vec2 {\n        if (!dest) { dest = this }\n\n        return matrix.multiplyVec2(this, dest)\n    }\n\n    static cross(vector: vec2, vector2: vec2, dest?: vec3): vec3 {\n        if (!dest) { dest = new vec3() }\n\n        const x = vector.x\n        const y = vector.y\n\n        const x2 = vector2.x\n        const y2 = vector2.y\n\n        const z = x * y2 - y * x2\n\n        dest.x = 0\n        dest.y = 0\n        dest.z = z\n\n        return dest\n    }\n\n    static dot(vector: vec2, vector2: vec2): number {\n        return (vector.x * vector2.x + vector.y * vector2.y)\n    }\n\n    static distance(vector: vec2, vector2: vec2): number {\n        return Math.sqrt(this.squaredDistance(vector, vector2))\n    }\n\n    static squaredDistance(vector: vec2, vector2: vec2): number {\n        const x = vector2.x - vector.x\n        const y = vector2.y - vector.y\n\n        return (x * x + y * y)\n    }\n\n    static direction(vector: vec2, vector2: vec2, dest?: vec2): vec2 {\n        if (!dest) { dest = new vec2() }\n\n        const x = vector.x - vector2.x\n        const y = vector.y - vector2.y\n\n        let length = Math.sqrt(x * x + y * y)\n\n        if (length === 0) {\n            dest.x = 0\n            dest.y = 0\n\n            return dest\n        }\n\n        length = 1 / length\n\n        dest.x = x * length\n        dest.y = y * length\n\n        return dest\n    }\n\n    static mix(vector: vec2, vector2: vec2, time: number, dest?: vec2): vec2 {\n        if (!dest) { dest = new vec2() }\n\n        const x = vector.x\n        const y = vector.y\n\n        const x2 = vector2.x\n        const y2 = vector2.y\n\n        dest.x = x + time * (x2 - x)\n        dest.y = y + time * (y2 - y)\n\n        return dest\n    }\n\n    static sum(vector: vec2, vector2: vec2, dest?: vec2): vec2 {\n        if (!dest) { dest = new vec2() }\n\n        dest.x = vector.x + vector2.x\n        dest.y = vector.y + vector2.y\n\n        return dest\n    }\n\n    static difference(vector: vec2, vector2: vec2, dest?: vec2): vec2 {\n        if (!dest) { dest = new vec2() }\n\n        dest.x = vector.x - vector2.x\n        dest.y = vector.y - vector2.y\n\n        return dest\n    }\n\n    static product(vector: vec2, vector2: vec2, dest?: vec2): vec2 {\n        if (!dest) { dest = new vec2() }\n\n        dest.x = vector.x * vector2.x\n        dest.y = vector.y * vector2.y\n\n        return dest\n    }\n\n    static quotient(vector: vec2, vector2: vec2, dest?: vec2): vec2 {\n        if (!dest) { dest = new vec2() }\n\n        dest.x = vector.x / vector2.x\n        dest.y = vector.y / vector2.y\n\n        return dest\n    }\n\n}\n","import vec2 from './vec2'\n\nimport { epsilon } from './constants'\n\nexport default class mat2 {\n\n    constructor(values?: number[]) {\n        if (values !== undefined) {\n            this.init(values)\n        }\n    }\n\n    private values = new Float32Array(4)\n\n    static readonly identity = new mat2().setIdentity()\n\n    at(index: number): number {\n        return this.values[index]\n    }\n\n    init(values: number[]): mat2 {\n        for (let i = 0; i < 4; i++) {\n            this.values[i] = values[i]\n        }\n\n        return this\n    }\n\n    reset(): void {\n        for (let i = 0; i < 4; i++) {\n            this.values[i] = 0\n        }\n    }\n\n    copy(dest?: mat2): mat2 {\n        if (!dest) { dest = new mat2() }\n\n        for (let i = 0; i < 4; i++) {\n            dest.values[i] = this.values[i]\n        }\n\n        return dest\n    }\n\n    all(): number[] {\n        const data: number[] = []\n        for (let i = 0; i < 4; i++) {\n            data[i] = this.values[i]\n        }\n\n        return data\n    }\n\n    row(index: number): number[] {\n        return [\n            this.values[index * 2 + 0],\n            this.values[index * 2 + 1],\n        ]\n    }\n\n    col(index: number): number[] {\n        return [\n            this.values[index],\n            this.values[index + 2],\n        ]\n    }\n\n    equals(matrix: mat2, threshold = epsilon): boolean {\n        for (let i = 0; i < 4; i++) {\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n    determinant(): number {\n        return this.values[0] * this.values[3] - this.values[2] * this.values[1]\n    }\n\n    setIdentity(): mat2 {\n        this.values[0] = 1\n        this.values[1] = 0\n        this.values[2] = 0\n        this.values[3] = 1\n\n        return this\n    }\n\n    transpose(): mat2 {\n        const temp = this.values[1]\n\n        this.values[1] = this.values[2]\n        this.values[2] = temp\n\n        return this\n    }\n\n    inverse(): mat2 {\n        let det = this.determinant()\n\n        if (!det) { return null }\n\n        det = 1.0 / det\n\n        const a11 = this.values[0]\n\n        this.values[0] = det * (this.values[3])\n        this.values[1] = det * (-this.values[1])\n        this.values[2] = det * (-this.values[2])\n        this.values[3] = det * a11\n\n        return this\n    }\n\n    multiply(matrix: mat2): mat2 {\n        const a11 = this.values[0]\n        const a12 = this.values[1]\n        const a21 = this.values[2]\n        const a22 = this.values[3]\n\n        this.values[0] = a11 * matrix.at(0) + a12 * matrix.at(2)\n        this.values[1] = a11 * matrix.at(1) + a12 * matrix.at(3)\n        this.values[2] = a21 * matrix.at(0) + a22 * matrix.at(2)\n        this.values[3] = a21 * matrix.at(1) + a22 * matrix.at(3)\n\n        return this\n    }\n\n    rotate(angle: number): mat2 {\n        const a11 = this.values[0]\n        const a12 = this.values[1]\n        const a21 = this.values[2]\n        const a22 = this.values[3]\n\n        const sin = Math.sin(angle)\n        const cos = Math.cos(angle)\n\n        this.values[0] = a11 * cos + a12 * sin\n        this.values[1] = a11 * -sin + a12 * cos\n        this.values[2] = a21 * cos + a22 * sin\n        this.values[3] = a21 * -sin + a22 * cos\n\n        return this\n    }\n\n    multiplyVec2(vector: vec2, result: vec2): vec2 {\n        const x = vector.x\n        const y = vector.y\n\n        if (result) {\n            result.xy = [\n                x * this.values[0] + y * this.values[1],\n                x * this.values[2] + y * this.values[3],\n            ]\n\n            return result\n        } else {\n            return new vec2([\n                x * this.values[0] + y * this.values[1],\n                x * this.values[2] + y * this.values[3],\n            ])\n        }\n    }\n\n    scale(vector: vec2): mat2 {\n        const a11 = this.values[0]\n        const a12 = this.values[1]\n        const a21 = this.values[2]\n        const a22 = this.values[3]\n\n        const x = vector.x\n        const y = vector.y\n\n        this.values[0] = a11 * x\n        this.values[1] = a12 * y\n        this.values[2] = a21 * x\n        this.values[3] = a22 * y\n\n        return this\n    }\n\n    static product(m1: mat2, m2: mat2, result: mat2): mat2 {\n        const a11 = m1.at(0)\n        const a12 = m1.at(1)\n        const a21 = m1.at(2)\n        const a22 = m1.at(3)\n\n        if (result) {\n            result.init([\n                a11 * m2.at(0) + a12 * m2.at(2),\n                a11 * m2.at(1) + a12 * m2.at(3),\n                a21 * m2.at(0) + a22 * m2.at(2),\n                a21 * m2.at(1) + a22 * m2.at(3),\n            ])\n\n            return result\n        } else {\n            return new mat2([\n                a11 * m2.at(0) + a12 * m2.at(2),\n                a11 * m2.at(1) + a12 * m2.at(3),\n                a21 * m2.at(0) + a22 * m2.at(2),\n                a21 * m2.at(1) + a22 * m2.at(3),\n            ])\n        }\n    }\n\n}\n","import mat2 from './mat2'\nimport mat3 from './mat3'\nimport mat4 from './mat4'\nimport quat from './quat'\nimport vec2 from './vec2'\nimport vec3 from './vec3'\nimport vec4 from './vec4'\n\nexport { mat2, mat3, mat4, quat, vec2, vec3, vec4 }\n\nexport default { mat2, mat3, mat4, quat, vec2, vec3, vec4 }\n"],"names":["values","this","Float32Array","undefined","xyzw","Object","vec4","value","index","x","y","z","w","dest","vector","threshold","Math","abs","sqrt","squaredLength","length","matrix","multiplyVec4","vector2","time","init","mat4","i","data","at","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","temp01","temp02","temp03","temp12","temp13","temp23","det00","det01","det02","det03","det04","det05","det06","det07","det08","det09","det10","det11","det","b0","b1","b2","b3","vec3","mat3","det21","angle","axis","s","sin","c","cos","t","b00","b01","b02","b10","b11","b12","b20","b21","b22","left","right","bottom","top","near","far","rl","tb","fn","fov","aspect","tan","PI","frustum","position","target","up","equals","identity","difference","normalize","cross","dot","m1","m2","result","b03","b13","b23","b30","b31","b32","b33","setIdentity","xy","vec2","xyz","m00","m01","m02","m10","m11","m12","m20","m21","m22","fourXSquaredMinus1","fourYSquaredMinus1","fourZSquaredMinus1","biggestIndex","fourBiggestSquaredMinus1","biggestVal","mult","quat","atan2","asin","invDot","other","q1x","q1y","q1z","q1w","q2x","q2y","q2z","q2w","qx","qy","qz","qw","ix","iy","iz","iw","x2","y2","z2","xx","xz","yy","yz","zz","wx","wy","wz","q1","q2","k0","k1","q2a","copy","inverse","oneOverSin","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","multiplyVec3","quaternion","squaredDistance","multiplyVec2","mat2","temp","determinant"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;sLAAO,iBC0JH,WAAYA,GAMJC,YAAS,IAAIC,aAAa,QALfC,IAAXH,IACAC,KAAKG,KAAOJ,GAkNxB,OAxWIK,sBAAIC,qBAAJ,WACI,OAAOL,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIC,qBAAJ,WACI,OAAOL,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIC,qBAAJ,WACI,OAAOL,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIC,qBAAJ,WACI,OAAOL,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIC,sBAAJ,WACI,OACIL,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAqCpB,SAAOA,GACHC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAnC5BK,sBAAIC,uBAAJ,WACI,OACIL,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAkCpB,SAAQA,GACJC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAjC5BK,sBAAIC,wBAAJ,WACI,OACIL,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,SA+BpB,SAASA,GACLC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAG5BK,sBAAIC,qBAAJ,WACI,OAAOL,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIC,qBAAJ,WACI,OAAOL,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIC,qBAAJ,WACI,OAAOL,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIC,qBAAJ,WACI,OAAOL,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIC,sBAAJ,WACI,OACIL,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAqCpB,SAAOA,GACHC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAnC5BK,sBAAIC,uBAAJ,WACI,OACIL,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAkCpB,SAAQA,GACJC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAjC5BK,sBAAIC,wBAAJ,WACI,OACIL,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,SA+BpB,SAASA,GACLC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAc5BM,eAAA,SAAGE,GACC,OAAOP,KAAKD,OAAOQ,IAGvBF,kBAAA,WACIL,KAAKQ,EAAI,EACTR,KAAKS,EAAI,EACTT,KAAKU,EAAI,EACTV,KAAKW,EAAI,GAGbN,iBAAA,SAAKO,GAQD,OAPKA,IAAQA,EAAO,IAAIP,GAExBO,EAAKJ,EAAIR,KAAKQ,EACdI,EAAKH,EAAIT,KAAKS,EACdG,EAAKF,EAAIV,KAAKU,EACdE,EAAKD,EAAIX,KAAKW,EAEPC,GAGXP,mBAAA,SAAOO,GAQH,OAPKA,IAAQA,EAAOZ,MAEpBY,EAAKJ,GAAKR,KAAKQ,EACfI,EAAKH,GAAKT,KAAKS,EACfG,EAAKF,GAAKV,KAAKU,EACfE,EAAKD,GAAKX,KAAKW,EAERC,GAGXP,mBAAA,SAAOQ,EAAcC,GACjB,oBADiBA,EDtMF,QCuMXC,KAAKC,IAAIhB,KAAKQ,EAAIK,EAAOL,GAAKM,OAI9BC,KAAKC,IAAIhB,KAAKS,EAAII,EAAOJ,GAAKK,OAI9BC,KAAKC,IAAIhB,KAAKU,EAAIG,EAAOH,GAAKI,MAI9BC,KAAKC,IAAIhB,KAAKW,EAAIE,EAAOF,GAAKG,MAOtCT,mBAAA,WACI,OAAOU,KAAKE,KAAKjB,KAAKkB,kBAG1Bb,0BAAA,WACI,IAAMG,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EACTC,EAAIX,KAAKW,EAEf,OAAQH,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAGxCN,gBAAA,SAAIQ,GAMA,OALAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EACjBT,KAAKU,GAAKG,EAAOH,EACjBV,KAAKW,GAAKE,EAAOF,EAEVX,MAGXK,qBAAA,SAASQ,GAML,OALAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EACjBT,KAAKU,GAAKG,EAAOH,EACjBV,KAAKW,GAAKE,EAAOF,EAEVX,MAGXK,qBAAA,SAASQ,GAML,OALAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EACjBT,KAAKU,GAAKG,EAAOH,EACjBV,KAAKW,GAAKE,EAAOF,EAEVX,MAGXK,mBAAA,SAAOQ,GAMH,OALAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EACjBT,KAAKU,GAAKG,EAAOH,EACjBV,KAAKW,GAAKE,EAAOF,EAEVX,MAGXK,kBAAA,SAAMC,EAAeM,GAQjB,OAPKA,IAAQA,EAAOZ,MAEpBY,EAAKJ,GAAKF,EACVM,EAAKH,GAAKH,EACVM,EAAKF,GAAKJ,EACVM,EAAKD,GAAKL,EAEHM,GAGXP,sBAAA,SAAUO,GACDA,IAAQA,EAAOZ,MAEpB,IAAImB,EAASnB,KAAKmB,SAElB,OAAe,IAAXA,EACOnB,KAGI,IAAXmB,GACAP,EAAKJ,GAAK,EACVI,EAAKH,GAAK,EACVG,EAAKF,GAAK,EACVE,EAAKD,GAAK,EAEHC,IAGXO,EAAS,EAAMA,EAEfP,EAAKJ,GAAKW,EACVP,EAAKH,GAAKU,EACVP,EAAKF,GAAKS,EACVP,EAAKD,GAAKQ,EAEHP,IAGXP,yBAAA,SAAae,EAAcR,GAGvB,OAFKA,IAAQA,EAAOZ,MAEboB,EAAOC,aAAarB,KAAMY,IAG9BP,MAAP,SAAWQ,EAAcS,EAAeC,EAAcX,GAQlD,OAPKA,IAAQA,EAAO,IAAIP,GAExBO,EAAKJ,EAAIK,EAAOL,EAAIe,GAAQD,EAAQd,EAAIK,EAAOL,GAC/CI,EAAKH,EAAII,EAAOJ,EAAIc,GAAQD,EAAQb,EAAII,EAAOJ,GAC/CG,EAAKF,EAAIG,EAAOH,EAAIa,GAAQD,EAAQZ,EAAIG,EAAOH,GAC/CE,EAAKD,EAAIE,EAAOF,EAAIY,GAAQD,EAAQX,EAAIE,EAAOF,GAExCC,GAGJP,MAAP,SAAWQ,EAAcS,EAAeV,GAQpC,OAPKA,IAAQA,EAAO,IAAIP,GAExBO,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAC5BG,EAAKF,EAAIG,EAAOH,EAAIY,EAAQZ,EAC5BE,EAAKD,EAAIE,EAAOF,EAAIW,EAAQX,EAErBC,GAGJP,aAAP,SAAkBQ,EAAcS,EAAeV,GAQ3C,OAPKA,IAAQA,EAAO,IAAIP,GAExBO,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAC5BG,EAAKF,EAAIG,EAAOH,EAAIY,EAAQZ,EAC5BE,EAAKD,EAAIE,EAAOF,EAAIW,EAAQX,EAErBC,GAGJP,UAAP,SAAeQ,EAAcS,EAAeV,GAQxC,OAPKA,IAAQA,EAAO,IAAIP,GAExBO,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAC5BG,EAAKF,EAAIG,EAAOH,EAAIY,EAAQZ,EAC5BE,EAAKD,EAAIE,EAAOF,EAAIW,EAAQX,EAErBC,GAGJP,WAAP,SAAgBQ,EAAcS,EAAeV,GAQzC,OAPKA,IAAQA,EAAO,IAAIP,GAExBO,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAC5BG,EAAKF,EAAIG,EAAOH,EAAIY,EAAQZ,EAC5BE,EAAKD,EAAIE,EAAOF,EAAIW,EAAQX,EAErBC,GA1MKP,OAAO,IAAIA,GAAM,EAAG,EAAG,EAAG,IAC1BA,MAAM,IAAIA,GAAM,EAAG,EAAG,EAAG,sBC3JzC,WAAYN,GAMJC,YAAS,IAAIC,aAAa,SALfC,IAAXH,GACAC,KAAKwB,KAAKzB,GA0nBtB,OAlnBI0B,eAAA,SAAGlB,GACC,OAAOP,KAAKD,OAAOQ,IAGvBkB,iBAAA,SAAK1B,GACD,IAAK,IAAI2B,EAAI,EAAGA,EAAI,GAAIA,IACpB1B,KAAKD,OAAO2B,GAAK3B,EAAO2B,GAG5B,OAAO1B,MAGXyB,kBAAA,WACI,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpB1B,KAAKD,OAAO2B,GAAK,GAIzBD,iBAAA,SAAKb,GACIA,IAAQA,EAAO,IAAIa,GAExB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpBd,EAAKb,OAAO2B,GAAK1B,KAAKD,OAAO2B,GAGjC,OAAOd,GAGXa,gBAAA,WAEI,IADA,IAAME,KACGD,EAAI,EAAGA,EAAI,GAAIA,IACpBC,EAAKD,GAAK1B,KAAKD,OAAO2B,GAG1B,OAAOC,GAGXF,gBAAA,SAAIlB,GACA,OACIP,KAAKD,OAAe,EAARQ,EAAY,GACxBP,KAAKD,OAAe,EAARQ,EAAY,GACxBP,KAAKD,OAAe,EAARQ,EAAY,GACxBP,KAAKD,OAAe,EAARQ,EAAY,KAIhCkB,gBAAA,SAAIlB,GACA,OACIP,KAAKD,OAAOQ,GACZP,KAAKD,OAAOQ,EAAQ,GACpBP,KAAKD,OAAOQ,EAAQ,GACpBP,KAAKD,OAAOQ,EAAQ,MAI5BkB,mBAAA,SAAOL,EAAcN,gBAAAA,EFzEF,ME0Ef,IAAK,IAAIY,EAAI,EAAGA,EAAI,GAAIA,IACpB,GAAIX,KAAKC,IAAIhB,KAAKD,OAAO2B,GAAKN,EAAOQ,GAAGF,IAAMZ,EAC1C,OAAO,EAIf,OAAO,GAGXW,wBAAA,WACI,IAAMI,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBiC,EAAMhC,KAAKD,OAAO,GAClBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBqC,EAAMpC,KAAKD,OAAO,GAClBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,IAClByC,EAAMxC,KAAKD,OAAO,IAClB0C,EAAMzC,KAAKD,OAAO,IAClB2C,EAAM1C,KAAKD,OAAO,IAClB4C,EAAM3C,KAAKD,OAAO,IAClB6C,EAAM5C,KAAKD,OAAO,IAexB,OAbc8B,EAAMK,EAAMJ,EAAMG,IAWlBM,EAAMK,EAAMJ,EAAMG,IAVlBd,EAAMM,EAAMJ,EAAME,IASlBK,EAAMM,EAAMJ,EAAME,IARlBb,EAAMO,EAAMJ,EAAMC,IAOlBK,EAAMK,EAAMJ,EAAMG,IANlBZ,EAAMK,EAAMJ,EAAMG,IAKlBG,EAAMO,EAAMJ,EAAMC,IAJlBX,EAAMM,EAAMJ,EAAME,IAGlBG,EAAMM,EAAMJ,EAAME,IAFlBV,EAAMK,EAAMJ,EAAMG,IAClBE,EAAMK,EAAMJ,EAAMG,IAUpChB,wBAAA,WAkBI,OAjBAzB,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,IAAM,EAClBC,KAAKD,OAAO,IAAM,EAClBC,KAAKD,OAAO,IAAM,EAClBC,KAAKD,OAAO,IAAM,EAClBC,KAAKD,OAAO,IAAM,EAClBC,KAAKD,OAAO,IAAM,EAEXC,MAGXyB,sBAAA,WACI,IAAMoB,EAAS7C,KAAKD,OAAO,GACrB+C,EAAS9C,KAAKD,OAAO,GACrBgD,EAAS/C,KAAKD,OAAO,GACrBiD,EAAShD,KAAKD,OAAO,GACrBkD,EAASjD,KAAKD,OAAO,GACrBmD,EAASlD,KAAKD,OAAO,IAe3B,OAbAC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAC7BC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAC7BC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,IAC7BC,KAAKD,OAAO,GAAK8C,EACjB7C,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAC7BC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,IAC7BC,KAAKD,OAAO,GAAK+C,EACjB9C,KAAKD,OAAO,GAAKiD,EACjBhD,KAAKD,OAAO,IAAMC,KAAKD,OAAO,IAC9BC,KAAKD,OAAO,IAAMgD,EAClB/C,KAAKD,OAAO,IAAMkD,EAClBjD,KAAKD,OAAO,IAAMmD,EAEXlD,MAGXyB,oBAAA,WACI,IAAMI,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBiC,EAAMhC,KAAKD,OAAO,GAClBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBqC,EAAMpC,KAAKD,OAAO,GAClBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,IAClByC,EAAMxC,KAAKD,OAAO,IAClB0C,EAAMzC,KAAKD,OAAO,IAClB2C,EAAM1C,KAAKD,OAAO,IAClB4C,EAAM3C,KAAKD,OAAO,IAClB6C,EAAM5C,KAAKD,OAAO,IAElBoD,EAAQtB,EAAMK,EAAMJ,EAAMG,EAC1BmB,EAAQvB,EAAMM,EAAMJ,EAAME,EAC1BoB,EAAQxB,EAAMO,EAAMJ,EAAMC,EAC1BqB,EAAQxB,EAAMK,EAAMJ,EAAMG,EAC1BqB,EAAQzB,EAAMM,EAAMJ,EAAME,EAC1BsB,EAAQzB,EAAMK,EAAMJ,EAAMG,EAC1BsB,EAAQpB,EAAMK,EAAMJ,EAAMG,EAC1BiB,EAAQrB,EAAMM,EAAMJ,EAAME,EAC1BkB,EAAQtB,EAAMO,EAAMJ,EAAMC,EAC1BmB,EAAQtB,EAAMK,EAAMJ,EAAMG,EAC1BmB,EAAQvB,EAAMM,EAAMJ,EAAME,EAC1BoB,EAAQvB,EAAMK,EAAMJ,EAAMG,EAE5BoB,EAAOZ,EAAQW,EAAQV,EAAQS,EAAQR,EAAQO,EAAQN,EAAQK,EAAQJ,EAAQG,EAAQF,EAAQC,EAEnG,OAAKM,GAILA,EAAM,EAAMA,EAEZ/D,KAAKD,OAAO,IAAMmC,EAAM4B,EAAQ3B,EAAM0B,EAAQzB,EAAMwB,GAASG,EAC7D/D,KAAKD,OAAO,KAAO+B,EAAMgC,EAAQ/B,EAAM8B,EAAQ7B,EAAM4B,GAASG,EAC9D/D,KAAKD,OAAO,IAAM2C,EAAMc,EAAQb,EAAMY,EAAQX,EAAMU,GAASS,EAC7D/D,KAAKD,OAAO,KAAOuC,EAAMkB,EAAQjB,EAAMgB,EAAQf,EAAMc,GAASS,EAC9D/D,KAAKD,OAAO,KAAOkC,EAAM6B,EAAQ3B,EAAMwB,EAAQvB,EAAMsB,GAASK,EAC9D/D,KAAKD,OAAO,IAAM8B,EAAMiC,EAAQ/B,EAAM4B,EAAQ3B,EAAM0B,GAASK,EAC7D/D,KAAKD,OAAO,KAAO0C,EAAMe,EAAQb,EAAMU,EAAQT,EAAMQ,GAASW,EAC9D/D,KAAKD,OAAO,IAAMsC,EAAMmB,EAAQjB,EAAMc,EAAQb,EAAMY,GAASW,EAC7D/D,KAAKD,OAAO,IAAMkC,EAAM4B,EAAQ3B,EAAMyB,EAAQvB,EAAMqB,GAASM,EAC7D/D,KAAKD,OAAO,KAAO8B,EAAMgC,EAAQ/B,EAAM6B,EAAQ3B,EAAMyB,GAASM,EAC9D/D,KAAKD,OAAO,KAAO0C,EAAMc,EAAQb,EAAMW,EAAQT,EAAMO,GAASY,EAC9D/D,KAAKD,OAAO,MAAQsC,EAAMkB,EAAQjB,EAAMe,EAAQb,EAAMW,GAASY,EAC/D/D,KAAKD,OAAO,MAAQkC,EAAM2B,EAAQ1B,EAAMwB,EAAQvB,EAAMsB,GAASM,EAC/D/D,KAAKD,OAAO,KAAO8B,EAAM+B,EAAQ9B,EAAM4B,EAAQ3B,EAAM0B,GAASM,EAC9D/D,KAAKD,OAAO,MAAQ0C,EAAMa,EAAQZ,EAAMU,EAAQT,EAAMQ,GAASY,EAC/D/D,KAAKD,OAAO,KAAOsC,EAAMiB,EAAQhB,EAAMc,EAAQb,EAAMY,GAASY,EAEvD/D,MAtBI,MAyBfyB,qBAAA,SAASL,GACL,IAAMS,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBiC,EAAMhC,KAAKD,OAAO,GAClBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBqC,EAAMpC,KAAKD,OAAO,GAClBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,IAClByC,EAAMxC,KAAKD,OAAO,IAClB0C,EAAMzC,KAAKD,OAAO,IAClB2C,EAAM1C,KAAKD,OAAO,IAClB4C,EAAM3C,KAAKD,OAAO,IAClB6C,EAAM5C,KAAKD,OAAO,IAEpBiE,EAAK5C,EAAOQ,GAAG,GACfqC,EAAK7C,EAAOQ,GAAG,GACfsC,EAAK9C,EAAOQ,GAAG,GACfuC,EAAK/C,EAAOQ,GAAG,GAqCnB,OAnCA5B,KAAKD,OAAO,GAAKiE,EAAKnC,EAAMoC,EAAKhC,EAAMiC,EAAK7B,EAAM8B,EAAK1B,EACvDzC,KAAKD,OAAO,GAAKiE,EAAKlC,EAAMmC,EAAK/B,EAAMgC,EAAK5B,EAAM6B,EAAKzB,EACvD1C,KAAKD,OAAO,GAAKiE,EAAKjC,EAAMkC,EAAK9B,EAAM+B,EAAK3B,EAAM4B,EAAKxB,EACvD3C,KAAKD,OAAO,GAAKiE,EAAKhC,EAAMiC,EAAK7B,EAAM8B,EAAK1B,EAAM2B,EAAKvB,EAEvDoB,EAAK5C,EAAOQ,GAAG,GACfqC,EAAK7C,EAAOQ,GAAG,GACfsC,EAAK9C,EAAOQ,GAAG,GACfuC,EAAK/C,EAAOQ,GAAG,GAEf5B,KAAKD,OAAO,GAAKiE,EAAKnC,EAAMoC,EAAKhC,EAAMiC,EAAK7B,EAAM8B,EAAK1B,EACvDzC,KAAKD,OAAO,GAAKiE,EAAKlC,EAAMmC,EAAK/B,EAAMgC,EAAK5B,EAAM6B,EAAKzB,EACvD1C,KAAKD,OAAO,GAAKiE,EAAKjC,EAAMkC,EAAK9B,EAAM+B,EAAK3B,EAAM4B,EAAKxB,EACvD3C,KAAKD,OAAO,GAAKiE,EAAKhC,EAAMiC,EAAK7B,EAAM8B,EAAK1B,EAAM2B,EAAKvB,EAEvDoB,EAAK5C,EAAOQ,GAAG,GACfqC,EAAK7C,EAAOQ,GAAG,GACfsC,EAAK9C,EAAOQ,GAAG,IACfuC,EAAK/C,EAAOQ,GAAG,IAEf5B,KAAKD,OAAO,GAAKiE,EAAKnC,EAAMoC,EAAKhC,EAAMiC,EAAK7B,EAAM8B,EAAK1B,EACvDzC,KAAKD,OAAO,GAAKiE,EAAKlC,EAAMmC,EAAK/B,EAAMgC,EAAK5B,EAAM6B,EAAKzB,EACvD1C,KAAKD,OAAO,IAAMiE,EAAKjC,EAAMkC,EAAK9B,EAAM+B,EAAK3B,EAAM4B,EAAKxB,EACxD3C,KAAKD,OAAO,IAAMiE,EAAKhC,EAAMiC,EAAK7B,EAAM8B,EAAK1B,EAAM2B,EAAKvB,EAExDoB,EAAK5C,EAAOQ,GAAG,IACfqC,EAAK7C,EAAOQ,GAAG,IACfsC,EAAK9C,EAAOQ,GAAG,IACfuC,EAAK/C,EAAOQ,GAAG,IAEf5B,KAAKD,OAAO,IAAMiE,EAAKnC,EAAMoC,EAAKhC,EAAMiC,EAAK7B,EAAM8B,EAAK1B,EACxDzC,KAAKD,OAAO,IAAMiE,EAAKlC,EAAMmC,EAAK/B,EAAMgC,EAAK5B,EAAM6B,EAAKzB,EACxD1C,KAAKD,OAAO,IAAMiE,EAAKjC,EAAMkC,EAAK9B,EAAM+B,EAAK3B,EAAM4B,EAAKxB,EACxD3C,KAAKD,OAAO,IAAMiE,EAAKhC,EAAMiC,EAAK7B,EAAM8B,EAAK1B,EAAM2B,EAAKvB,EAEjD5C,MAGXyB,yBAAA,SAAaZ,GACT,IAAML,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXC,EAAIG,EAAOH,EAEjB,OAAO,IAAI0D,GACPpE,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,IAC3EC,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,IAC3EC,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,IAAMW,EAAIV,KAAKD,OAAO,OAIpF0B,yBAAA,SAAaZ,EAAcD,GAClBA,IAAQA,EAAO,IAAIP,GAExB,IAAMG,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXC,EAAIG,EAAOH,EACXC,EAAIE,EAAOF,EAOjB,OALAC,EAAKJ,EAAIR,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,IAAMY,EAC1FC,EAAKH,EAAIT,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,IAAMY,EAC1FC,EAAKF,EAAIV,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,IAAMW,EAAIV,KAAKD,OAAO,IAAMY,EAC3FC,EAAKD,EAAIX,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,IAAMW,EAAIV,KAAKD,OAAO,IAAMY,EAEpFC,GAGXa,mBAAA,WACI,OAAO,IAAI4C,GACPrE,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,OAIpB0B,0BAAA,WACI,IAAMI,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,IAElBqD,EAAQb,EAAML,EAAMC,EAAMG,EAC1BwB,GAASvB,EAAMN,EAAME,EAAME,EAC3BiC,EAAQhC,EAAML,EAAMC,EAAMG,EAE5B0B,EAAMlC,EAAMuB,EAAQtB,EAAMgC,EAAQ/B,EAAMuC,EAE5C,OAAKP,EAME,IAAIM,GACPjB,GAHJW,EAAM,EAAMA,KAINxB,EAAMT,EAAMC,EAAMO,GAAOyB,GAC1B5B,EAAML,EAAMC,EAAMG,GAAO6B,EAC1BD,EAAQC,GACPxB,EAAMV,EAAME,EAAMM,GAAO0B,IACxB5B,EAAMN,EAAME,EAAME,GAAO8B,EAC3BO,EAAQP,IACNzB,EAAMT,EAAMC,EAAMO,GAAO0B,GAC1B7B,EAAML,EAAMC,EAAMG,GAAO8B,IAdnB,MAkBftC,sBAAA,SAAUZ,GACN,IAAML,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXC,EAAIG,EAAOH,EAOjB,OALAV,KAAKD,OAAO,KAAOC,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAC9EV,KAAKD,OAAO,KAAOC,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAC9EV,KAAKD,OAAO,KAAOC,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,IAAMW,EAC/EV,KAAKD,OAAO,KAAOC,KAAKD,OAAO,GAAKS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,IAAMW,EAExEV,MAGXyB,kBAAA,SAAMZ,GACF,IAAML,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXC,EAAIG,EAAOH,EAiBjB,OAfAV,KAAKD,OAAO,IAAMS,EAClBR,KAAKD,OAAO,IAAMS,EAClBR,KAAKD,OAAO,IAAMS,EAClBR,KAAKD,OAAO,IAAMS,EAElBR,KAAKD,OAAO,IAAMU,EAClBT,KAAKD,OAAO,IAAMU,EAClBT,KAAKD,OAAO,IAAMU,EAClBT,KAAKD,OAAO,IAAMU,EAElBT,KAAKD,OAAO,IAAMW,EAClBV,KAAKD,OAAO,IAAMW,EAClBV,KAAKD,OAAO,KAAOW,EACnBV,KAAKD,OAAO,KAAOW,EAEZV,MAGXyB,mBAAA,SAAO8C,EAAeC,GAClB,IAAIhE,EAAIgE,EAAKhE,EACTC,EAAI+D,EAAK/D,EACTC,EAAI8D,EAAK9D,EAETS,EAASJ,KAAKE,KAAKT,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAE3C,IAAKS,EACD,OAAO,KAGI,IAAXA,IAEAX,GADAW,EAAS,EAAIA,EAEbV,GAAKU,EACLT,GAAKS,GAGT,IAAMsD,EAAI1D,KAAK2D,IAAIH,GACbI,EAAI5D,KAAK6D,IAAIL,GAEbM,EAAI,EAAMF,EAEV9C,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBiC,EAAMhC,KAAKD,OAAO,GAElBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBqC,EAAMpC,KAAKD,OAAO,GAElBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,IAClByC,EAAMxC,KAAKD,OAAO,IAElB+E,EAAMtE,EAAIA,EAAIqE,EAAIF,EAClBI,EAAMtE,EAAID,EAAIqE,EAAInE,EAAI+D,EACtBO,EAAMtE,EAAIF,EAAIqE,EAAIpE,EAAIgE,EAEtBQ,EAAMzE,EAAIC,EAAIoE,EAAInE,EAAI+D,EACtBS,EAAMzE,EAAIA,EAAIoE,EAAIF,EAClBQ,EAAMzE,EAAID,EAAIoE,EAAIrE,EAAIiE,EAEtBW,EAAM5E,EAAIE,EAAImE,EAAIpE,EAAIgE,EACtBY,EAAM5E,EAAIC,EAAImE,EAAIrE,EAAIiE,EACtBa,EAAM5E,EAAIA,EAAImE,EAAIF,EAiBxB,OAfA3E,KAAKD,OAAO,GAAK8B,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAAM2C,EAC/ChF,KAAKD,OAAO,GAAK+B,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EAAM0C,EAC/ChF,KAAKD,OAAO,GAAKgC,EAAM+C,EAAM3C,EAAM4C,EAAMxC,EAAMyC,EAC/ChF,KAAKD,OAAO,GAAKiC,EAAM8C,EAAM1C,EAAM2C,EAAMvC,EAAMwC,EAE/ChF,KAAKD,OAAO,GAAK8B,EAAMoD,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAC/CnF,KAAKD,OAAO,GAAK+B,EAAMmD,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAC/CnF,KAAKD,OAAO,GAAKgC,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAAM4C,EAC/CnF,KAAKD,OAAO,GAAKiC,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAAM2C,EAE/CnF,KAAKD,OAAO,GAAK8B,EAAMuD,EAAMnD,EAAMoD,EAAMhD,EAAMiD,EAC/CtF,KAAKD,OAAO,GAAK+B,EAAMsD,EAAMlD,EAAMmD,EAAM/C,EAAMgD,EAC/CtF,KAAKD,OAAO,IAAMgC,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAChDtF,KAAKD,OAAO,IAAMiC,EAAMoD,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAEzCtF,MAGJyB,UAAP,SAAe8D,EAAcC,EAAeC,EAAgBC,EAAaC,EAAcC,GACnF,IAAMC,EAAML,EAAQD,EACdO,EAAMJ,EAAMD,EACZM,EAAMH,EAAMD,EAElB,OAAO,IAAIlE,GACC,EAAPkE,EAAYE,EACb,EACA,EACA,EAEA,EACQ,EAAPF,EAAYG,EACb,EACA,GAECN,EAAQD,GAAQM,GAChBH,EAAMD,GAAUK,IACfF,EAAMD,GAAQI,GACf,EAED,EACA,GACEH,EAAMD,EAAO,EAAKI,EACpB,KAIDtE,cAAP,SAAmBuE,EAAaC,EAAgBN,EAAcC,GAC1D,IAAMF,EAAMC,EAAO5E,KAAKmF,IAAIF,EAAMjF,KAAKoF,GAAK,KACtCX,EAAQE,EAAMO,EAEpB,OAAOxE,EAAK2E,SAASZ,EAAOA,GAAQE,EAAKA,EAAKC,EAAMC,IAGjDnE,eAAP,SAAoB8D,EAAcC,EAAeC,EAAgBC,EAAaC,EAAcC,GACxF,IAAMC,EAAML,EAAQD,EACdO,EAAMJ,EAAMD,EACZM,EAAMH,EAAMD,EAElB,OAAO,IAAIlE,GACP,EAAIoE,EACJ,EACA,EACA,EAEA,EACA,EAAIC,EACJ,EACA,EAEA,EACA,GACC,EAAIC,EACL,IAEER,EAAOC,GAASK,IAChBH,EAAMD,GAAUK,IAChBF,EAAMD,GAAQI,EAChB,KAIDtE,SAAP,SAAc4E,EAAgBC,EAAcC,GACxC,gBADwCA,EAAWnC,EAAKmC,IACpDF,EAASG,OAAOF,GAChB,OAAOtG,KAAKyG,SAGhB,IAAM/F,EAAI0D,EAAKsC,WAAWL,EAAUC,GAAQK,YAEtCnG,EAAI4D,EAAKwC,MAAML,EAAI7F,GAAGiG,YACtBlG,EAAI2D,EAAKwC,MAAMlG,EAAGF,GAAGmG,YAE3B,OAAO,IAAIlF,GACPjB,EAAEA,EACFC,EAAED,EACFE,EAAEF,EACF,EAEAA,EAAEC,EACFA,EAAEA,EACFC,EAAED,EACF,EAEAD,EAAEE,EACFD,EAAEC,EACFA,EAAEA,EACF,GAEC0D,EAAKyC,IAAIrG,EAAG6F,IACZjC,EAAKyC,IAAIpG,EAAG4F,IACZjC,EAAKyC,IAAInG,EAAG2F,GACb,KAID5E,UAAP,SAAeqF,EAAUC,EAAUC,GAC/B,IAAMnF,EAAMiF,EAAGlF,GAAG,GACZE,EAAMgF,EAAGlF,GAAG,GACZG,EAAM+E,EAAGlF,GAAG,GACZI,EAAM8E,EAAGlF,GAAG,GACZK,EAAM6E,EAAGlF,GAAG,GACZM,EAAM4E,EAAGlF,GAAG,GACZO,EAAM2E,EAAGlF,GAAG,GACZQ,EAAM0E,EAAGlF,GAAG,GACZS,EAAMyE,EAAGlF,GAAG,GACZU,EAAMwE,EAAGlF,GAAG,GACZW,EAAMuE,EAAGlF,GAAG,IACZY,EAAMsE,EAAGlF,GAAG,IACZa,EAAMqE,EAAGlF,GAAG,IACZc,EAAMoE,EAAGlF,GAAG,IACZe,EAAMmE,EAAGlF,GAAG,IACZgB,EAAMkE,EAAGlF,GAAG,IAEZkD,EAAMiC,EAAGnF,GAAG,GACZmD,EAAMgC,EAAGnF,GAAG,GACZoD,EAAM+B,EAAGnF,GAAG,GACZqF,EAAMF,EAAGnF,GAAG,GACZqD,EAAM8B,EAAGnF,GAAG,GACZsD,EAAM6B,EAAGnF,GAAG,GACZuD,EAAM4B,EAAGnF,GAAG,GACZsF,EAAMH,EAAGnF,GAAG,GACZwD,EAAM2B,EAAGnF,GAAG,GACZyD,EAAM0B,EAAGnF,GAAG,GACZ0D,EAAMyB,EAAGnF,GAAG,IACZuF,EAAMJ,EAAGnF,GAAG,IACZwF,EAAML,EAAGnF,GAAG,IACZyF,EAAMN,EAAGnF,GAAG,IACZ0F,EAAMP,EAAGnF,GAAG,IACZ2F,EAAMR,EAAGnF,GAAG,IAElB,OAAIoF,GACAA,EAAOxF,MACHsD,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAAM4E,EAAMxE,EAC1CqC,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAAM2E,EAAMvE,EAC1CoC,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EAAM0E,EAAMtE,EAC1CmC,EAAM9C,EAAM+C,EAAM3C,EAAM4C,EAAMxC,EAAMyE,EAAMrE,EAE1CqC,EAAMpD,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAAM6E,EAAMzE,EAC1CwC,EAAMnD,EAAMoD,EAAMhD,EAAMiD,EAAM7C,EAAM4E,EAAMxE,EAC1CuC,EAAMlD,EAAMmD,EAAM/C,EAAMgD,EAAM5C,EAAM2E,EAAMvE,EAC1CsC,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAAM0E,EAAMtE,EAE1CwC,EAAMvD,EAAMwD,EAAMpD,EAAMqD,EAAMjD,EAAM8E,EAAM1E,EAC1C2C,EAAMtD,EAAMuD,EAAMnD,EAAMoD,EAAMhD,EAAM6E,EAAMzE,EAC1C0C,EAAMrD,EAAMsD,EAAMlD,EAAMmD,EAAM/C,EAAM4E,EAAMxE,EAC1CyC,EAAMpD,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAAM2E,EAAMvE,EAE1CwE,EAAMvF,EAAMwF,EAAMpF,EAAMqF,EAAMjF,EAAMkF,EAAM9E,EAC1C2E,EAAMtF,EAAMuF,EAAMnF,EAAMoF,EAAMhF,EAAMiF,EAAM7E,EAC1C0E,EAAMrF,EAAMsF,EAAMlF,EAAMmF,EAAM/E,EAAMgF,EAAM5E,EAC1CyE,EAAMpF,EAAMqF,EAAMjF,EAAMkF,EAAM9E,EAAM+E,EAAM3E,IAGvCoE,GAEA,IAAIvF,GACPqD,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAAM4E,EAAMxE,EAC1CqC,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAAM2E,EAAMvE,EAC1CoC,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EAAM0E,EAAMtE,EAC1CmC,EAAM9C,EAAM+C,EAAM3C,EAAM4C,EAAMxC,EAAMyE,EAAMrE,EAE1CqC,EAAMpD,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAAM6E,EAAMzE,EAC1CwC,EAAMnD,EAAMoD,EAAMhD,EAAMiD,EAAM7C,EAAM4E,EAAMxE,EAC1CuC,EAAMlD,EAAMmD,EAAM/C,EAAMgD,EAAM5C,EAAM2E,EAAMvE,EAC1CsC,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAAM0E,EAAMtE,EAE1CwC,EAAMvD,EAAMwD,EAAMpD,EAAMqD,EAAMjD,EAAM8E,EAAM1E,EAC1C2C,EAAMtD,EAAMuD,EAAMnD,EAAMoD,EAAMhD,EAAM6E,EAAMzE,EAC1C0C,EAAMrD,EAAMsD,EAAMlD,EAAMmD,EAAM/C,EAAM4E,EAAMxE,EAC1CyC,EAAMpD,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAAM2E,EAAMvE,EAE1CwE,EAAMvF,EAAMwF,EAAMpF,EAAMqF,EAAMjF,EAAMkF,EAAM9E,EAC1C2E,EAAMtF,EAAMuF,EAAMnF,EAAMoF,EAAMhF,EAAMiF,EAAM7E,EAC1C0E,EAAMrF,EAAMsF,EAAMlF,EAAMmF,EAAM/E,EAAMgF,EAAM5E,EAC1CyE,EAAMpF,EAAMqF,EAAMjF,EAAMkF,EAAM9E,EAAM+E,EAAM3E,KA/mBtCnB,YAAW,IAAIA,GAAO+F,gCCPtC,WAAYzH,GAMJC,YAAS,IAAIC,aAAa,QALfC,IAAXH,GACAC,KAAKwB,KAAKzB,GA0dtB,OAldIsE,eAAA,SAAG9D,GACC,OAAOP,KAAKD,OAAOQ,IAGvB8D,iBAAA,SAAKtE,GACD,IAAK,IAAI2B,EAAI,EAAGA,EAAI,EAAGA,IACnB1B,KAAKD,OAAO2B,GAAK3B,EAAO2B,GAG5B,OAAO1B,MAGXqE,kBAAA,WACI,IAAK,IAAI3C,EAAI,EAAGA,EAAI,EAAGA,IACnB1B,KAAKD,OAAO2B,GAAK,GAIzB2C,iBAAA,SAAKzD,GACIA,IAAQA,EAAO,IAAIyD,GAExB,IAAK,IAAI3C,EAAI,EAAGA,EAAI,EAAGA,IACnBd,EAAKb,OAAO2B,GAAK1B,KAAKD,OAAO2B,GAGjC,OAAOd,GAGXyD,gBAAA,WAEI,IADA,IAAM1C,KACGD,EAAI,EAAGA,EAAI,EAAGA,IACnBC,EAAKD,GAAK1B,KAAKD,OAAO2B,GAG1B,OAAOC,GAGX0C,gBAAA,SAAI9D,GACA,OACIP,KAAKD,OAAe,EAARQ,EAAY,GACxBP,KAAKD,OAAe,EAARQ,EAAY,GACxBP,KAAKD,OAAe,EAARQ,EAAY,KAIhC8D,gBAAA,SAAI9D,GACA,OACIP,KAAKD,OAAOQ,GACZP,KAAKD,OAAOQ,EAAQ,GACpBP,KAAKD,OAAOQ,EAAQ,KAI5B8D,mBAAA,SAAOjD,EAAcN,gBAAAA,EHxEF,MGyEf,IAAK,IAAIY,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIX,KAAKC,IAAIhB,KAAKD,OAAO2B,GAAKN,EAAOQ,GAAGF,IAAMZ,EAC1C,OAAO,EAIf,OAAO,GAGXuD,wBAAA,WACI,IAAMxC,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,GAMxB,OAAO8B,GAJOU,EAAML,EAAMC,EAAMG,GAIXR,IAHNS,EAAMN,EAAME,EAAME,GAGEN,GAFrBO,EAAML,EAAMC,EAAMG,IAKpCgC,wBAAA,WAWI,OAVArE,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EAEVC,MAGXqE,sBAAA,WACI,IAAMxB,EAAS7C,KAAKD,OAAO,GACrB+C,EAAS9C,KAAKD,OAAO,GACrBiD,EAAShD,KAAKD,OAAO,GAS3B,OAPAC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAC7BC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAC7BC,KAAKD,OAAO,GAAK8C,EACjB7C,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAC7BC,KAAKD,OAAO,GAAK+C,EACjB9C,KAAKD,OAAO,GAAKiD,EAEVhD,MAGXqE,oBAAA,WACI,IAAMxC,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,GAElBqD,EAAQb,EAAML,EAAMC,EAAMG,EAC1BwB,GAASvB,EAAMN,EAAME,EAAME,EAC3BiC,EAAQhC,EAAML,EAAMC,EAAMG,EAE5B0B,EAAMlC,EAAMuB,EAAQtB,EAAMgC,EAAQ/B,EAAMuC,EAE5C,OAAKP,GAILA,EAAM,EAAMA,EAEZ/D,KAAKD,OAAO,GAAKqD,EAAQW,EACzB/D,KAAKD,OAAO,KAAOwC,EAAMT,EAAMC,EAAMO,GAAOyB,EAC5C/D,KAAKD,OAAO,IAAMoC,EAAML,EAAMC,EAAMG,GAAO6B,EAC3C/D,KAAKD,OAAO,GAAK+D,EAAQC,EACzB/D,KAAKD,OAAO,IAAMwC,EAAMV,EAAME,EAAMM,GAAO0B,EAC3C/D,KAAKD,OAAO,KAAOoC,EAAMN,EAAME,EAAME,GAAO8B,EAC5C/D,KAAKD,OAAO,GAAKuE,EAAQP,EACzB/D,KAAKD,OAAO,KAAOuC,EAAMT,EAAMC,EAAMO,GAAO0B,EAC5C/D,KAAKD,OAAO,IAAMmC,EAAML,EAAMC,EAAMG,GAAO8B,EAEpC/D,MAfI,MAkBfqE,qBAAA,SAASjD,GACL,IAAMS,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,GAElB+E,EAAM1D,EAAOQ,GAAG,GAChBmD,EAAM3D,EAAOQ,GAAG,GAChBoD,EAAM5D,EAAOQ,GAAG,GAChBqD,EAAM7D,EAAOQ,GAAG,GAChBsD,EAAM9D,EAAOQ,GAAG,GAChBuD,EAAM/D,EAAOQ,GAAG,GAChBwD,EAAMhE,EAAOQ,GAAG,GAChByD,EAAMjE,EAAOQ,GAAG,GAChB0D,EAAMlE,EAAOQ,GAAG,GActB,OAZA5B,KAAKD,OAAO,GAAK+E,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAC/CrC,KAAKD,OAAO,GAAK+E,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAC/CtC,KAAKD,OAAO,GAAK+E,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EAE/CvC,KAAKD,OAAO,GAAKkF,EAAMpD,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAC/CrC,KAAKD,OAAO,GAAKkF,EAAMnD,EAAMoD,EAAMhD,EAAMiD,EAAM7C,EAC/CtC,KAAKD,OAAO,GAAKkF,EAAMlD,EAAMmD,EAAM/C,EAAMgD,EAAM5C,EAE/CvC,KAAKD,OAAO,GAAKqF,EAAMvD,EAAMwD,EAAMpD,EAAMqD,EAAMjD,EAC/CrC,KAAKD,OAAO,GAAKqF,EAAMtD,EAAMuD,EAAMnD,EAAMoD,EAAMhD,EAC/CtC,KAAKD,OAAO,GAAKqF,EAAMrD,EAAMsD,EAAMlD,EAAMmD,EAAM/C,EAExCvC,MAGXqE,yBAAA,SAAaxD,EAAcmG,GACvB,IAAMxG,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EAEjB,OAAIuG,GACAA,EAAOS,IACHjH,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GACtDS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKC,KAAKD,OAAO,IAGnDiH,GAEA,IAAIU,GACPlH,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GACtDS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKC,KAAKD,OAAO,MAKlEsE,yBAAA,SAAaxD,EAAcmG,GACvB,IAAMxG,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXC,EAAIG,EAAOH,EAEjB,OAAIsG,GACAA,EAAOW,KACHnH,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,GAC1DS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,GAC1DS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,IAGvDiH,GAEA,IAAI5C,GACP5D,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,GAC1DS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,GAC1DS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GAAKW,EAAIV,KAAKD,OAAO,MAKtEsE,mBAAA,SAAO2C,GACH,OAAIA,GACAA,EAAOxF,MACHxB,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZ,EAEAC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZ,EAEAC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZ,EAEA,EACA,EACA,EACA,IAGGiH,GAEA,IAAIvF,GACPzB,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZ,EAEAC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZ,EAEAC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZ,EAEA,EACA,EACA,EACA,KAKZsE,mBAAA,WACI,IAAMuD,EAAM5H,KAAKD,OAAO,GAClB8H,EAAM7H,KAAKD,OAAO,GAClB+H,EAAM9H,KAAKD,OAAO,GAClBgI,EAAM/H,KAAKD,OAAO,GAClBiI,EAAMhI,KAAKD,OAAO,GAClBkI,EAAMjI,KAAKD,OAAO,GAClBmI,EAAMlI,KAAKD,OAAO,GAClBoI,EAAMnI,KAAKD,OAAO,GAClBqI,EAAMpI,KAAKD,OAAO,GAElBsI,EAAqBT,EAAMI,EAAMI,EACjCE,EAAqBN,EAAMJ,EAAMQ,EACjCG,EAAqBH,EAAMR,EAAMI,EAGnCQ,EAAe,EAEfC,EAJuBb,EAAMI,EAAMI,EAMnCC,EAAqBI,IACrBA,EAA2BJ,EAC3BG,EAAe,GAGfF,EAAqBG,IACrBA,EAA2BH,EAC3BE,EAAe,GAGfD,EAAqBE,IACrBA,EAA2BF,EAC3BC,EAAe,GAGnB,IAAME,EAAuD,GAA1C3H,KAAKE,KAAKwH,EAA2B,GAClDE,EAAO,IAAOD,EAEd1B,EAAS,IAAI4B,EAEnB,OAAQJ,GACJ,KAAK,EAEDxB,EAAOrG,EAAI+H,EACX1B,EAAOxG,GAAKyH,EAAME,GAAOQ,EACzB3B,EAAOvG,GAAKyH,EAAMJ,GAAOa,EACzB3B,EAAOtG,GAAKmH,EAAME,GAAOY,EAEzB,MAEJ,KAAK,EAED3B,EAAOrG,GAAKsH,EAAME,GAAOQ,EACzB3B,EAAOxG,EAAIkI,EACX1B,EAAOvG,GAAKoH,EAAME,GAAOY,EACzB3B,EAAOtG,GAAKwH,EAAMJ,GAAOa,EAEzB,MAEJ,KAAK,EAED3B,EAAOrG,GAAKuH,EAAMJ,GAAOa,EACzB3B,EAAOxG,GAAKqH,EAAME,GAAOY,EACzB3B,EAAOvG,EAAIiI,EACX1B,EAAOtG,GAAKuH,EAAME,GAAOQ,EAEzB,MAEJ,KAAK,EAED3B,EAAOrG,GAAKkH,EAAME,GAAOY,EACzB3B,EAAOxG,GAAK0H,EAAMJ,GAAOa,EACzB3B,EAAOvG,GAAKwH,EAAME,GAAOQ,EACzB3B,EAAOtG,EAAIgI,EAKnB,OAAO1B,GAGX3C,mBAAA,SAAOE,EAAeC,GAClB,IAAIhE,EAAIgE,EAAKhE,EACTC,EAAI+D,EAAK/D,EACTC,EAAI8D,EAAK9D,EAETS,EAASJ,KAAKE,KAAKT,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAE3C,IAAKS,EACD,OAAO,KAGI,IAAXA,IAEAX,GADAW,EAAS,EAAIA,EAEbV,GAAKU,EACLT,GAAKS,GAGT,IAAMsD,EAAI1D,KAAK2D,IAAIH,GACbI,EAAI5D,KAAK6D,IAAIL,GAEbM,EAAI,EAAMF,EAEV9C,EAAM7B,KAAKD,OAAO,GAClB+B,EAAM9B,KAAKD,OAAO,GAClBgC,EAAM/B,KAAKD,OAAO,GAClBkC,EAAMjC,KAAKD,OAAO,GAClBmC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBsC,EAAMrC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,IAElB+E,EAAMtE,EAAIA,EAAIqE,EAAIF,EAClBI,EAAMtE,EAAID,EAAIqE,EAAInE,EAAI+D,EACtBO,EAAMtE,EAAIF,EAAIqE,EAAIpE,EAAIgE,EACtBQ,EAAMzE,EAAIC,EAAIoE,EAAInE,EAAI+D,EACtBS,EAAMzE,EAAIA,EAAIoE,EAAIF,EAClBQ,EAAMzE,EAAID,EAAIoE,EAAIrE,EAAIiE,EACtBW,EAAM5E,EAAIE,EAAImE,EAAIpE,EAAIgE,EACtBY,EAAM5E,EAAIC,EAAImE,EAAIrE,EAAIiE,EACtBa,EAAM5E,EAAIA,EAAImE,EAAIF,EAcxB,OAZA3E,KAAKD,OAAO,GAAK8B,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAAM2C,EAC/ChF,KAAKD,OAAO,GAAK+B,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EAAM0C,EAC/ChF,KAAKD,OAAO,GAAKgC,EAAM+C,EAAM3C,EAAM4C,EAAMxC,EAAMyC,EAE/ChF,KAAKD,OAAO,GAAK8B,EAAMoD,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAC/CnF,KAAKD,OAAO,GAAK+B,EAAMmD,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAC/CnF,KAAKD,OAAO,GAAKgC,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAAM4C,EAE/CnF,KAAKD,OAAO,GAAK8B,EAAMuD,EAAMnD,EAAMoD,EAAMhD,EAAMiD,EAC/CtF,KAAKD,OAAO,GAAK+B,EAAMsD,EAAMlD,EAAMmD,EAAM/C,EAAMgD,EAC/CtF,KAAKD,OAAO,GAAKgC,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAExCtF,MAGJqE,UAAP,SAAeyC,EAAUC,EAAUC,GAC/B,IAAMnF,EAAMiF,EAAGlF,GAAG,GACZE,EAAMgF,EAAGlF,GAAG,GACZG,EAAM+E,EAAGlF,GAAG,GACZK,EAAM6E,EAAGlF,GAAG,GACZM,EAAM4E,EAAGlF,GAAG,GACZO,EAAM2E,EAAGlF,GAAG,GACZS,EAAMyE,EAAGlF,GAAG,GACZU,EAAMwE,EAAGlF,GAAG,GACZW,EAAMuE,EAAGlF,GAAG,GAEZkD,EAAMiC,EAAGnF,GAAG,GACZmD,EAAMgC,EAAGnF,GAAG,GACZoD,EAAM+B,EAAGnF,GAAG,GACZqD,EAAM8B,EAAGnF,GAAG,GACZsD,EAAM6B,EAAGnF,GAAG,GACZuD,EAAM4B,EAAGnF,GAAG,GACZwD,EAAM2B,EAAGnF,GAAG,GACZyD,EAAM0B,EAAGnF,GAAG,GACZ0D,EAAMyB,EAAGnF,GAAG,GAElB,OAAIoF,GACAA,EAAOxF,MACHsD,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAC9ByC,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAC9BwC,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EAE9B0C,EAAMpD,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAC9B4C,EAAMnD,EAAMoD,EAAMhD,EAAMiD,EAAM7C,EAC9B2C,EAAMlD,EAAMmD,EAAM/C,EAAMgD,EAAM5C,EAE9B6C,EAAMvD,EAAMwD,EAAMpD,EAAMqD,EAAMjD,EAC9B+C,EAAMtD,EAAMuD,EAAMnD,EAAMoD,EAAMhD,EAC9B8C,EAAMrD,EAAMsD,EAAMlD,EAAMmD,EAAM/C,IAG3ByE,GAEA,IAAI3C,GACPS,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAC9ByC,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAC9BwC,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EAE9B0C,EAAMpD,EAAMqD,EAAMjD,EAAMkD,EAAM9C,EAC9B4C,EAAMnD,EAAMoD,EAAMhD,EAAMiD,EAAM7C,EAC9B2C,EAAMlD,EAAMmD,EAAM/C,EAAMgD,EAAM5C,EAE9B6C,EAAMvD,EAAMwD,EAAMpD,EAAMqD,EAAMjD,EAC9B+C,EAAMtD,EAAMuD,EAAMnD,EAAMoD,EAAMhD,EAC9B8C,EAAMrD,EAAMsD,EAAMlD,EAAMmD,EAAM/C,KA/c1B8B,YAAW,IAAIA,GAAOmD,gCCiEtC,WAAYzH,GAMJC,YAAS,IAAIC,aAAa,QALfC,IAAXH,IACAC,KAAKG,KAAOJ,GA+axB,OA3fIK,sBAAIwI,qBAAJ,WACI,OAAO5I,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIwI,qBAAJ,WACI,OAAO5I,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIwI,qBAAJ,WACI,OAAO5I,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIwI,qBAAJ,WACI,OAAO5I,KAAKD,OAAO,QAuCvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCArCrBF,sBAAIwI,sBAAJ,WACI,OACI5I,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAqCpB,SAAOA,GACHC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAnC5BK,sBAAIwI,uBAAJ,WACI,OACI5I,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAkCpB,SAAQA,GACJC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAjC5BK,sBAAIwI,wBAAJ,WACI,OACI5I,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,SA+BpB,SAASA,GACLC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAa5B6I,eAAA,SAAGrI,GACC,OAAOP,KAAKD,OAAOQ,IAGvBqI,kBAAA,WACI,IAAK,IAAIlH,EAAI,EAAGA,EAAI,EAAGA,IACnB1B,KAAKD,OAAO2B,GAAK,GAIzBkH,iBAAA,SAAKhI,GACIA,IAAQA,EAAO,IAAIgI,GAExB,IAAK,IAAIlH,EAAI,EAAGA,EAAI,EAAGA,IACnBd,EAAKb,OAAO2B,GAAK1B,KAAKD,OAAO2B,GAGjC,OAAOd,GAGXgI,iBAAA,WACI,IAAMpI,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EACTC,EAAIX,KAAKW,EAEf,OAAOI,KAAK8H,MAAM,GAAOrI,EAAIC,EAAIE,EAAID,GAAIC,EAAIA,EAAIH,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,IAGzEkI,kBAAA,WACI,IAAMpI,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EACTC,EAAIX,KAAKW,EAEf,OAAOI,KAAK8H,MAAM,GAAOpI,EAAIC,EAAIC,EAAIH,GAAIG,EAAIA,EAAIH,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,IAGzEkI,gBAAA,WACI,OAAO7H,KAAK+H,KAAK,GAAO9I,KAAKQ,EAAIR,KAAKU,EAAIV,KAAKW,EAAIX,KAAKS,KAG5DmI,mBAAA,SAAO/H,EAAcC,gBAAAA,EJtIF,MIuIf,IAAK,IAAIY,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIX,KAAKC,IAAIhB,KAAKD,OAAO2B,GAAKb,EAAOe,GAAGF,IAAMZ,EAC1C,OAAO,EAIf,OAAO,GAGX8H,wBAAA,WAMI,OALA5I,KAAKQ,EAAI,EACTR,KAAKS,EAAI,EACTT,KAAKU,EAAI,EACTV,KAAKW,EAAI,EAEFX,MAGX4I,uBAAA,WACI,IAAMpI,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EAIf,OAFAV,KAAKW,GAAMI,KAAKE,KAAKF,KAAKC,IAAI,EAAMR,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,IAEjDV,MAGX4I,oBAAA,WACI,IAAM/B,EAAM+B,EAAK/B,IAAI7G,KAAMA,MAE3B,IAAK6G,EAGD,OAFA7G,KAAKG,MAAQ,EAAG,EAAG,EAAG,GAEfH,KAGX,IAAM+I,EAASlC,EAAM,EAAMA,EAAM,EAOjC,OALA7G,KAAKQ,IAAMuI,EACX/I,KAAKS,IAAMsI,EACX/I,KAAKU,IAAMqI,EACX/I,KAAKW,GAAKoI,EAEH/I,MAGX4I,sBAAA,WAKI,OAJA5I,KAAKD,OAAO,KAAO,EACnBC,KAAKD,OAAO,KAAO,EACnBC,KAAKD,OAAO,KAAO,EAEZC,MAGX4I,mBAAA,WACI,IAAMpI,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EACTC,EAAIX,KAAKW,EAEf,OAAOI,KAAKE,KAAKT,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,IAGjDiI,sBAAA,SAAUhI,GACDA,IAAQA,EAAOZ,MAEpB,IAAMQ,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EACTC,EAAIX,KAAKW,EAEXQ,EAASJ,KAAKE,KAAKT,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAEnD,OAAKQ,GASLA,EAAS,EAAIA,EAEbP,EAAKJ,EAAIA,EAAIW,EACbP,EAAKH,EAAIA,EAAIU,EACbP,EAAKF,EAAIA,EAAIS,EACbP,EAAKD,EAAIA,EAAIQ,EAENP,IAfHA,EAAKJ,EAAI,EACTI,EAAKH,EAAI,EACTG,EAAKF,EAAI,EACTE,EAAKD,EAAI,EAEFC,IAafgI,gBAAA,SAAII,GACA,IAAK,IAAItH,EAAI,EAAGA,EAAI,EAAGA,IACnB1B,KAAKD,OAAO2B,IAAMsH,EAAMpH,GAAGF,GAG/B,OAAO1B,MAGX4I,qBAAA,SAASI,GACL,IAAMC,EAAMjJ,KAAKD,OAAO,GAClBmJ,EAAMlJ,KAAKD,OAAO,GAClBoJ,EAAMnJ,KAAKD,OAAO,GAClBqJ,EAAMpJ,KAAKD,OAAO,GAElBsJ,EAAML,EAAMxI,EACZ8I,EAAMN,EAAMvI,EACZ8I,EAAMP,EAAMtI,EACZ8I,EAAMR,EAAMrI,EAOlB,OALAX,KAAKQ,EAAIyI,EAAMO,EAAMJ,EAAMC,EAAMH,EAAMK,EAAMJ,EAAMG,EACnDtJ,KAAKS,EAAIyI,EAAMM,EAAMJ,EAAME,EAAMH,EAAME,EAAMJ,EAAMM,EACnDvJ,KAAKU,EAAIyI,EAAMK,EAAMJ,EAAMG,EAAMN,EAAMK,EAAMJ,EAAMG,EACnDrJ,KAAKW,EAAIyI,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAE5CvJ,MAGX4I,yBAAA,SAAa/H,EAAcD,GAClBA,IAAQA,EAAO,IAAIwD,GAExB,IAAM5D,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXC,EAAIG,EAAOH,EAEX+I,EAAKzJ,KAAKQ,EACVkJ,EAAK1J,KAAKS,EACVkJ,EAAK3J,KAAKU,EACVkJ,EAAK5J,KAAKW,EAEVkJ,EAAKD,EAAKpJ,EAAIkJ,EAAKhJ,EAAIiJ,EAAKlJ,EAC5BqJ,EAAKF,EAAKnJ,EAAIkJ,EAAKnJ,EAAIiJ,EAAK/I,EAC5BqJ,EAAKH,EAAKlJ,EAAI+I,EAAKhJ,EAAIiJ,EAAKlJ,EAC5BwJ,GAAMP,EAAKjJ,EAAIkJ,EAAKjJ,EAAIkJ,EAAKjJ,EAMnC,OAJAE,EAAKJ,EAAIqJ,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EAC/C9I,EAAKH,EAAIqJ,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EAC/C/I,EAAKF,EAAIqJ,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EAExC7I,GAGXgI,mBAAA,SAAOhI,GACEA,IAAQA,EAAO,IAAIyD,GAExB,IAAM7D,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EACTC,EAAIX,KAAKW,EAETsJ,EAAKzJ,EAAIA,EACT0J,EAAKzJ,EAAIA,EACT0J,EAAKzJ,EAAIA,EAET0J,EAAK5J,EAAIyJ,EACTxC,EAAKjH,EAAI0J,EACTG,EAAK7J,EAAI2J,EACTG,EAAK7J,EAAIyJ,EACTK,EAAK9J,EAAI0J,EACTK,EAAK9J,EAAIyJ,EACTM,EAAK9J,EAAIsJ,EACTS,EAAK/J,EAAIuJ,EACTS,EAAKhK,EAAIwJ,EAgBf,OAdAvJ,EAAKY,MACD,GAAK8I,EAAKE,GACV/C,EAAKkD,EACLN,EAAKK,EAELjD,EAAKkD,EACL,GAAKP,EAAKI,GACVD,EAAKE,EAELJ,EAAKK,EACLH,EAAKE,EACL,GAAKL,EAAKE,KAGP1J,GAGXgI,mBAAA,SAAOhI,GACEA,IAAQA,EAAO,IAAIa,GAExB,IAAMjB,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EACTC,EAAIX,KAAKW,EAETsJ,EAAKzJ,EAAIA,EACT0J,EAAKzJ,EAAIA,EACT0J,EAAKzJ,EAAIA,EAET0J,EAAK5J,EAAIyJ,EACTxC,EAAKjH,EAAI0J,EACTG,EAAK7J,EAAI2J,EACTG,EAAK7J,EAAIyJ,EACTK,EAAK9J,EAAI0J,EACTK,EAAK9J,EAAIyJ,EACTM,EAAK9J,EAAIsJ,EACTS,EAAK/J,EAAIuJ,EACTS,EAAKhK,EAAIwJ,EAwBf,OAtBAvJ,EAAKY,MACD,GAAK8I,EAAKE,GACV/C,EAAKkD,EACLN,EAAKK,EACL,EAEAjD,EAAKkD,EACL,GAAKP,EAAKI,GACVD,EAAKE,EACL,EAEAJ,EAAKK,EACLH,EAAKE,EACL,GAAKL,EAAKE,GACV,EAEA,EACA,EACA,EACA,IAGG1J,GAGJgI,MAAP,SAAWgC,EAAUC,GACjB,OAAOD,EAAGpK,EAAIqK,EAAGrK,EAAIoK,EAAGnK,EAAIoK,EAAGpK,EAAImK,EAAGlK,EAAImK,EAAGnK,EAAIkK,EAAGjK,EAAIkK,EAAGlK,GAGxDiI,MAAP,SAAWgC,EAAUC,EAAUjK,GAQ3B,OAPKA,IAAQA,EAAO,IAAIgI,GAExBhI,EAAKJ,EAAIoK,EAAGpK,EAAIqK,EAAGrK,EACnBI,EAAKH,EAAImK,EAAGnK,EAAIoK,EAAGpK,EACnBG,EAAKF,EAAIkK,EAAGlK,EAAImK,EAAGnK,EACnBE,EAAKD,EAAIiK,EAAGjK,EAAIkK,EAAGlK,EAEZC,GAGJgI,UAAP,SAAegC,EAAUC,EAAUjK,GAC1BA,IAAQA,EAAO,IAAIgI,GAExB,IAAMK,EAAM2B,EAAGpK,EACT0I,EAAM0B,EAAGnK,EACT0I,EAAMyB,EAAGlK,EACT0I,EAAMwB,EAAGjK,EAET0I,EAAMwB,EAAGrK,EACT8I,EAAMuB,EAAGpK,EACT8I,EAAMsB,EAAGnK,EACT8I,EAAMqB,EAAGlK,EAOf,OALAC,EAAKJ,EAAIyI,EAAMO,EAAMJ,EAAMC,EAAMH,EAAMK,EAAMJ,EAAMG,EACnD1I,EAAKH,EAAIyI,EAAMM,EAAMJ,EAAME,EAAMH,EAAME,EAAMJ,EAAMM,EACnD3I,EAAKF,EAAIyI,EAAMK,EAAMJ,EAAMG,EAAMN,EAAMK,EAAMJ,EAAMG,EACnDzI,EAAKD,EAAIyI,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAE5C3I,GAGJgI,QAAP,SAAagC,EAAUC,EAAUjK,GACxBA,IAAQA,EAAO,IAAIgI,GAExB,IAAMK,EAAM2B,EAAGpK,EACT0I,EAAM0B,EAAGnK,EACT0I,EAAMyB,EAAGlK,EACT0I,EAAMwB,EAAGjK,EAET0I,EAAMwB,EAAGrK,EACT8I,EAAMuB,EAAGpK,EACT8I,EAAMsB,EAAGnK,EACT8I,EAAMqB,EAAGlK,EAOf,OALAC,EAAKJ,EAAI4I,EAAMG,EAAMJ,EAAMK,EAAMP,EAAMK,EAAMJ,EAAMG,EACnDzI,EAAKH,EAAI2I,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EACnD3I,EAAKF,EAAI0I,EAAMC,EAAMJ,EAAMO,EAAMN,EAAMK,EAAMJ,EAAMG,EACnD1I,EAAKD,EAAIyI,EAAME,EAAMJ,EAAMM,EAAML,EAAME,EAAMJ,EAAMM,EAE5C3I,GAGJgI,WAAP,SAAgBgC,EAAUC,EAAUtJ,EAAcX,GAG9C,GAFKA,IAAQA,EAAO,IAAIgI,GAEpBrH,GAAQ,EAGR,OAFAX,EAAKT,KAAOyK,EAAGzK,KAERS,EACJ,GAAIW,GAAQ,EAGf,OAFAX,EAAKT,KAAO0K,EAAG1K,KAERS,EAGX,IAQIkK,EACAC,EATAnG,EAAMgE,EAAK/B,IAAI+D,EAAIC,GACjBG,EAAMH,EAAGI,OAUf,GARIrG,EAAM,IACNoG,EAAIE,UACJtG,GAAOA,GAMPA,EAAM,MACNkG,EAAK,EAAIvJ,EACTwJ,EAAK,EAAIxJ,MACN,CACH,IAAMmD,EAAc3D,KAAKE,KAAK,EAAI2D,EAAMA,GAClCL,EAAgBxD,KAAK8H,MAAMnE,EAAKE,GAEhCuG,EAAqB,EAAIzG,EAE/BoG,EAAK/J,KAAK2D,KAAK,EAAInD,GAAQgD,GAAS4G,EACpCJ,EAAKhK,KAAK2D,KAAK,EAAInD,GAAQgD,GAAS4G,EAQxC,OALAvK,EAAKJ,EAAIsK,EAAKF,EAAGpK,EAAIuK,EAAKC,EAAIxK,EAC9BI,EAAKH,EAAIqK,EAAKF,EAAGnK,EAAIsK,EAAKC,EAAIvK,EAC9BG,EAAKF,EAAIoK,EAAKF,EAAGlK,EAAIqK,EAAKC,EAAItK,EAC9BE,EAAKD,EAAImK,EAAKF,EAAGjK,EAAIoK,EAAKC,EAAIrK,EAEvBC,GAGJgI,MAAP,SAAWgC,EAAUC,EAAUtJ,EAAcX,GACpCA,IAAQA,EAAO,IAAIgI,GAExB,IAAMwC,EAAeR,EAAGpK,EAAIqK,EAAGrK,EAAIoK,EAAGnK,EAAIoK,EAAGpK,EAAImK,EAAGlK,EAAImK,EAAGnK,EAAIkK,EAAGjK,EAAIkK,EAAGlK,EAEzE,GAAII,KAAKC,IAAIoK,IAAiB,EAG1B,OAFAxK,EAAKT,KAAOyK,EAAGzK,KAERS,EAGX,IAAMyK,EAAYtK,KAAKuK,KAAKF,GACtBG,EAAexK,KAAKE,KAAK,EAAMmK,EAAeA,GAEpD,GAAIrK,KAAKC,IAAIuK,GAAgB,KAMzB,OALA3K,EAAKJ,EAAW,GAAPoK,EAAGpK,EAAiB,GAAPqK,EAAGrK,EACzBI,EAAKH,EAAW,GAAPmK,EAAGnK,EAAiB,GAAPoK,EAAGpK,EACzBG,EAAKF,EAAW,GAAPkK,EAAGlK,EAAiB,GAAPmK,EAAGnK,EACzBE,EAAKD,EAAW,GAAPiK,EAAGjK,EAAiB,GAAPkK,EAAGlK,EAElBC,EAGX,IAAM4K,EAASzK,KAAK2D,KAAK,EAAInD,GAAQ8J,GAAaE,EAC5CE,EAAS1K,KAAK2D,IAAInD,EAAO8J,GAAaE,EAO5C,OALA3K,EAAKJ,EAAIoK,EAAGpK,EAAIgL,EAASX,EAAGrK,EAAIiL,EAChC7K,EAAKH,EAAImK,EAAGnK,EAAI+K,EAASX,EAAGpK,EAAIgL,EAChC7K,EAAKF,EAAIkK,EAAGlK,EAAI8K,EAASX,EAAGnK,EAAI+K,EAChC7K,EAAKD,EAAIiK,EAAGjK,EAAI6K,EAASX,EAAGlK,EAAI8K,EAEzB7K,GAGJgI,gBAAP,SAAqBpE,EAAYD,EAAe3D,GACvCA,IAAQA,EAAO,IAAIgI,GAExBrE,GAAS,GACT,IAAMG,EAAM3D,KAAK2D,IAAIH,GAOrB,OALA3D,EAAKJ,EAAIgE,EAAKhE,EAAIkE,EAClB9D,EAAKH,EAAI+D,EAAK/D,EAAIiE,EAClB9D,EAAKF,EAAI8D,EAAK9D,EAAIgE,EAClB9D,EAAKD,EAAII,KAAK6D,IAAIL,GAEX3D,GAtaKgI,YAAW,IAAIA,GAAOpB,gCCjCtC,WAAYzH,GAMJC,YAAS,IAAIC,aAAa,QALfC,IAAXH,IACAC,KAAK2H,IAAM5H,GAuSvB,OA3VIK,sBAAIgE,qBAAJ,WACI,OAAOpE,KAAKD,OAAO,QA0BvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCAxBrBF,sBAAIgE,qBAAJ,WACI,OAAOpE,KAAKD,OAAO,QA0BvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCAxBrBF,sBAAIgE,qBAAJ,WACI,OAAOpE,KAAKD,OAAO,QA0BvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCAxBrBF,sBAAIgE,sBAAJ,WACI,OACIpE,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAwBpB,SAAOA,GACHC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAtB5BK,sBAAIgE,uBAAJ,WACI,OACIpE,KAAKD,OAAO,GACZC,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAqBpB,SAAQA,GACJC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAkB5BqE,eAAA,SAAG7D,GACC,OAAOP,KAAKD,OAAOQ,IAGvB6D,kBAAA,WACIpE,KAAKQ,EAAI,EACTR,KAAKS,EAAI,EACTT,KAAKU,EAAI,GAGb0D,iBAAA,SAAKxD,GAOD,OANKA,IAAQA,EAAO,IAAIwD,GAExBxD,EAAKJ,EAAIR,KAAKQ,EACdI,EAAKH,EAAIT,KAAKS,EACdG,EAAKF,EAAIV,KAAKU,EAEPE,GAGXwD,mBAAA,SAAOxD,GAOH,OANKA,IAAQA,EAAOZ,MAEpBY,EAAKJ,GAAKR,KAAKQ,EACfI,EAAKH,GAAKT,KAAKS,EACfG,EAAKF,GAAKV,KAAKU,EAERE,GAGXwD,mBAAA,SAAOvD,EAAcC,GACjB,oBADiBA,ELtGF,QKuGXC,KAAKC,IAAIhB,KAAKQ,EAAIK,EAAOL,GAAKM,OAI9BC,KAAKC,IAAIhB,KAAKS,EAAII,EAAOJ,GAAKK,MAI9BC,KAAKC,IAAIhB,KAAKU,EAAIG,EAAOH,GAAKI,KAOtCsD,mBAAA,WACI,OAAOrD,KAAKE,KAAKjB,KAAKkB,kBAG1BkD,0BAAA,WACI,IAAM5D,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EACTC,EAAIV,KAAKU,EAEf,OAAQF,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAGhC0D,gBAAA,SAAIvD,GAKA,OAJAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EACjBT,KAAKU,GAAKG,EAAOH,EAEVV,MAGXoE,qBAAA,SAASvD,GAKL,OAJAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EACjBT,KAAKU,GAAKG,EAAOH,EAEVV,MAGXoE,qBAAA,SAASvD,GAKL,OAJAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EACjBT,KAAKU,GAAKG,EAAOH,EAEVV,MAGXoE,mBAAA,SAAOvD,GAKH,OAJAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EACjBT,KAAKU,GAAKG,EAAOH,EAEVV,MAGXoE,kBAAA,SAAM9D,EAAeM,GAOjB,OANKA,IAAQA,EAAOZ,MAEpBY,EAAKJ,GAAKF,EACVM,EAAKH,GAAKH,EACVM,EAAKF,GAAKJ,EAEHM,GAGXwD,sBAAA,SAAUxD,GACDA,IAAQA,EAAOZ,MAEpB,IAAImB,EAASnB,KAAKmB,SAElB,OAAe,IAAXA,EACOnB,KAGI,IAAXmB,GACAP,EAAKJ,EAAI,EACTI,EAAKH,EAAI,EACTG,EAAKF,EAAI,EAEFE,IAGXO,EAAS,EAAMA,EAEfP,EAAKJ,GAAKW,EACVP,EAAKH,GAAKU,EACVP,EAAKF,GAAKS,EAEHP,IAGXwD,2BAAA,SAAehD,EAAcR,GAGzB,OAFKA,IAAQA,EAAOZ,MAEboB,EAAOsK,aAAa1L,KAAMY,IAGrCwD,2BAAA,SAAeuH,EAAkB/K,GAG7B,OAFKA,IAAQA,EAAOZ,MAEb2L,EAAWD,aAAa1L,KAAMY,IAGzCwD,mBAAA,SAAOxD,GACEA,IAAQA,EAAO,IAAIgI,GAExB,IAAMjE,EAAI,IAAIP,EACRK,EAAI,IAAIL,EAgBd,OAdAO,EAAEnE,EAAIO,KAAK6D,IAAa,GAAT5E,KAAKQ,GACpBiE,EAAEjE,EAAIO,KAAK2D,IAAa,GAAT1E,KAAKQ,GAEpBmE,EAAElE,EAAIM,KAAK6D,IAAa,GAAT5E,KAAKS,GACpBgE,EAAEhE,EAAIM,KAAK2D,IAAa,GAAT1E,KAAKS,GAEpBkE,EAAEjE,EAAIK,KAAK6D,IAAa,GAAT5E,KAAKU,GACpB+D,EAAE/D,EAAIK,KAAK2D,IAAa,GAAT1E,KAAKU,GAEpBE,EAAKJ,EAAIiE,EAAEjE,EAAImE,EAAElE,EAAIkE,EAAEjE,EAAIiE,EAAEnE,EAAIiE,EAAEhE,EAAIgE,EAAE/D,EACzCE,EAAKH,EAAIkE,EAAEnE,EAAIiE,EAAEhE,EAAIkE,EAAEjE,EAAI+D,EAAEjE,EAAImE,EAAElE,EAAIgE,EAAE/D,EACzCE,EAAKF,EAAIiE,EAAEnE,EAAImE,EAAElE,EAAIgE,EAAE/D,EAAI+D,EAAEjE,EAAIiE,EAAEhE,EAAIkE,EAAEjE,EACzCE,EAAKD,EAAIgE,EAAEnE,EAAImE,EAAElE,EAAIkE,EAAEjE,EAAI+D,EAAEjE,EAAIiE,EAAEhE,EAAIgE,EAAE/D,EAElCE,GAGJwD,QAAP,SAAavD,EAAcS,EAAeV,GACjCA,IAAQA,EAAO,IAAIwD,GAExB,IAAM5D,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXC,EAAIG,EAAOH,EAEXuJ,EAAK3I,EAAQd,EACb0J,EAAK5I,EAAQb,EACb0J,EAAK7I,EAAQZ,EAMnB,OAJAE,EAAKJ,EAAIC,EAAI0J,EAAKzJ,EAAIwJ,EACtBtJ,EAAKH,EAAIC,EAAIuJ,EAAKzJ,EAAI2J,EACtBvJ,EAAKF,EAAIF,EAAI0J,EAAKzJ,EAAIwJ,EAEfrJ,GAGJwD,MAAP,SAAWvD,EAAcS,GACrB,IAAMd,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXC,EAAIG,EAAOH,EAMjB,OAAQF,EAJGc,EAAQd,EAIFC,EAHNa,EAAQb,EAGOC,EAFfY,EAAQZ,GAKhB0D,WAAP,SAAgBvD,EAAcS,GAChBA,EAAQd,EAAIK,EAAOL,EACnBc,EAAQb,EAAII,EAAOJ,EACnBa,EAAQZ,EAAIG,EAAOH,EAE7B,OAAOK,KAAKE,KAAKjB,KAAK4L,gBAAgB/K,EAAQS,KAG3C8C,kBAAP,SAAuBvD,EAAcS,GACjC,IAAMd,EAAIc,EAAQd,EAAIK,EAAOL,EACvBC,EAAIa,EAAQb,EAAII,EAAOJ,EACvBC,EAAIY,EAAQZ,EAAIG,EAAOH,EAE7B,OAAQF,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAGzB0D,YAAP,SAAiBvD,EAAcS,EAAeV,GACrCA,IAAQA,EAAO,IAAIwD,GAExB,IAAM5D,EAAIK,EAAOL,EAAIc,EAAQd,EACvBC,EAAII,EAAOJ,EAAIa,EAAQb,EACvBC,EAAIG,EAAOH,EAAIY,EAAQZ,EAEzBS,EAASJ,KAAKE,KAAKT,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAE3C,OAAe,IAAXS,GACAP,EAAKJ,EAAI,EACTI,EAAKH,EAAI,EACTG,EAAKF,EAAI,EAEFE,IAGXO,EAAS,EAAIA,EAEbP,EAAKJ,EAAIA,EAAIW,EACbP,EAAKH,EAAIA,EAAIU,EACbP,EAAKF,EAAIA,EAAIS,EAENP,IAGJwD,MAAP,SAAWvD,EAAcS,EAAeC,EAAcX,GAOlD,OANKA,IAAQA,EAAO,IAAIwD,GAExBxD,EAAKJ,EAAIK,EAAOL,EAAIe,GAAQD,EAAQd,EAAIK,EAAOL,GAC/CI,EAAKH,EAAII,EAAOJ,EAAIc,GAAQD,EAAQb,EAAII,EAAOJ,GAC/CG,EAAKF,EAAIG,EAAOH,EAAIa,GAAQD,EAAQZ,EAAIG,EAAOH,GAExCE,GAGJwD,MAAP,SAAWvD,EAAcS,EAAeV,GAOpC,OANKA,IAAQA,EAAO,IAAIwD,GAExBxD,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAC5BG,EAAKF,EAAIG,EAAOH,EAAIY,EAAQZ,EAErBE,GAGJwD,aAAP,SAAkBvD,EAAcS,EAAeV,GAO3C,OANKA,IAAQA,EAAO,IAAIwD,GAExBxD,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAC5BG,EAAKF,EAAIG,EAAOH,EAAIY,EAAQZ,EAErBE,GAGJwD,UAAP,SAAevD,EAAcS,EAAeV,GAOxC,OANKA,IAAQA,EAAO,IAAIwD,GAExBxD,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAC5BG,EAAKF,EAAIG,EAAOH,EAAIY,EAAQZ,EAErBE,GAGJwD,WAAP,SAAgBvD,EAAcS,EAAeV,GAOzC,OANKA,IAAQA,EAAO,IAAIwD,GAExBxD,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAC5BG,EAAKF,EAAIG,EAAOH,EAAIY,EAAQZ,EAErBE,GA/RKwD,OAAO,IAAIA,GAAM,EAAG,EAAG,IACvBA,MAAM,IAAIA,GAAM,EAAG,EAAG,IAEtBA,KAAK,IAAIA,GAAM,EAAG,EAAG,IACrBA,QAAQ,IAAIA,GAAM,EAAG,EAAG,IACxBA,UAAU,IAAIA,GAAM,EAAG,EAAG,sBClC1C,WAAYrE,GAMJC,YAAS,IAAIC,aAAa,QALfC,IAAXH,IACAC,KAAKyH,GAAK1H,GA+OtB,OA7QIK,sBAAIsH,qBAAJ,WACI,OAAO1H,KAAKD,OAAO,QAcvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCAZrBF,sBAAIsH,qBAAJ,WACI,OAAO1H,KAAKD,OAAO,QAcvB,SAAMO,GACFN,KAAKD,OAAO,GAAKO,mCAZrBF,sBAAIsH,sBAAJ,WACI,OACI1H,KAAKD,OAAO,GACZC,KAAKD,OAAO,SAYpB,SAAOA,GACHC,KAAKD,OAAO,GAAKA,EAAO,GACxBC,KAAKD,OAAO,GAAKA,EAAO,oCAc5B2H,eAAA,SAAGnH,GACC,OAAOP,KAAKD,OAAOQ,IAGvBmH,kBAAA,WACI1H,KAAKQ,EAAI,EACTR,KAAKS,EAAI,GAGbiH,iBAAA,SAAK9G,GAMD,OALKA,IAAQA,EAAO,IAAI8G,GAExB9G,EAAKJ,EAAIR,KAAKQ,EACdI,EAAKH,EAAIT,KAAKS,EAEPG,GAGX8G,mBAAA,SAAO9G,GAMH,OALKA,IAAQA,EAAOZ,MAEpBY,EAAKJ,GAAKR,KAAKQ,EACfI,EAAKH,GAAKT,KAAKS,EAERG,GAGX8G,mBAAA,SAAO7G,EAAcC,GACjB,oBADiBA,EN1EF,QM2EXC,KAAKC,IAAIhB,KAAKQ,EAAIK,EAAOL,GAAKM,MAI9BC,KAAKC,IAAIhB,KAAKS,EAAII,EAAOJ,GAAKK,IAOtC4G,mBAAA,WACI,OAAO3G,KAAKE,KAAKjB,KAAKkB,kBAG1BwG,0BAAA,WACI,IAAMlH,EAAIR,KAAKQ,EACTC,EAAIT,KAAKS,EAEf,OAAQD,EAAIA,EAAIC,EAAIA,GAGxBiH,gBAAA,SAAI7G,GAIA,OAHAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EAEVT,MAGX0H,qBAAA,SAAS7G,GAIL,OAHAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EAEVT,MAGX0H,qBAAA,SAAS7G,GAIL,OAHAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EAEVT,MAGX0H,mBAAA,SAAO7G,GAIH,OAHAb,KAAKQ,GAAKK,EAAOL,EACjBR,KAAKS,GAAKI,EAAOJ,EAEVT,MAGX0H,kBAAA,SAAMpH,EAAeM,GAMjB,OALKA,IAAQA,EAAOZ,MAEpBY,EAAKJ,GAAKF,EACVM,EAAKH,GAAKH,EAEHM,GAGX8G,sBAAA,SAAU9G,GACDA,IAAQA,EAAOZ,MAEpB,IAAImB,EAASnB,KAAKmB,SAElB,OAAe,IAAXA,EACOnB,KAGI,IAAXmB,GACAP,EAAKJ,EAAI,EACTI,EAAKH,EAAI,EAEFG,IAGXO,EAAS,EAAMA,EAEfP,EAAKJ,GAAKW,EACVP,EAAKH,GAAKU,EAEHP,IAGX8G,yBAAA,SAAatG,EAAcR,GAGvB,OAFKA,IAAQA,EAAOZ,MAEboB,EAAOyK,aAAa7L,KAAMY,IAGrC8G,yBAAA,SAAatG,EAAcR,GAGvB,OAFKA,IAAQA,EAAOZ,MAEboB,EAAOyK,aAAa7L,KAAMY,IAG9B8G,QAAP,SAAa7G,EAAcS,EAAeV,GACjCA,IAAQA,EAAO,IAAIwD,GAExB,IAAM5D,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EAEXwJ,EAAK3I,EAAQd,EAGbE,EAAIF,EAFCc,EAAQb,EAEAA,EAAIwJ,EAMvB,OAJArJ,EAAKJ,EAAI,EACTI,EAAKH,EAAI,EACTG,EAAKF,EAAIA,EAEFE,GAGJ8G,MAAP,SAAW7G,EAAcS,GACrB,OAAQT,EAAOL,EAAIc,EAAQd,EAAIK,EAAOJ,EAAIa,EAAQb,GAG/CiH,WAAP,SAAgB7G,EAAcS,GAC1B,OAAOP,KAAKE,KAAKjB,KAAK4L,gBAAgB/K,EAAQS,KAG3CoG,kBAAP,SAAuB7G,EAAcS,GACjC,IAAMd,EAAIc,EAAQd,EAAIK,EAAOL,EACvBC,EAAIa,EAAQb,EAAII,EAAOJ,EAE7B,OAAQD,EAAIA,EAAIC,EAAIA,GAGjBiH,YAAP,SAAiB7G,EAAcS,EAAeV,GACrCA,IAAQA,EAAO,IAAI8G,GAExB,IAAMlH,EAAIK,EAAOL,EAAIc,EAAQd,EACvBC,EAAII,EAAOJ,EAAIa,EAAQb,EAEzBU,EAASJ,KAAKE,KAAKT,EAAIA,EAAIC,EAAIA,GAEnC,OAAe,IAAXU,GACAP,EAAKJ,EAAI,EACTI,EAAKH,EAAI,EAEFG,IAGXO,EAAS,EAAIA,EAEbP,EAAKJ,EAAIA,EAAIW,EACbP,EAAKH,EAAIA,EAAIU,EAENP,IAGJ8G,MAAP,SAAW7G,EAAcS,EAAeC,EAAcX,GAC7CA,IAAQA,EAAO,IAAI8G,GAExB,IAAMlH,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EAEXwJ,EAAK3I,EAAQd,EACb0J,EAAK5I,EAAQb,EAKnB,OAHAG,EAAKJ,EAAIA,EAAIe,GAAQ0I,EAAKzJ,GAC1BI,EAAKH,EAAIA,EAAIc,GAAQ2I,EAAKzJ,GAEnBG,GAGJ8G,MAAP,SAAW7G,EAAcS,EAAeV,GAMpC,OALKA,IAAQA,EAAO,IAAI8G,GAExB9G,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAErBG,GAGJ8G,aAAP,SAAkB7G,EAAcS,EAAeV,GAM3C,OALKA,IAAQA,EAAO,IAAI8G,GAExB9G,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAErBG,GAGJ8G,UAAP,SAAe7G,EAAcS,EAAeV,GAMxC,OALKA,IAAQA,EAAO,IAAI8G,GAExB9G,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAErBG,GAGJ8G,WAAP,SAAgB7G,EAAcS,EAAeV,GAMzC,OALKA,IAAQA,EAAO,IAAI8G,GAExB9G,EAAKJ,EAAIK,EAAOL,EAAIc,EAAQd,EAC5BI,EAAKH,EAAII,EAAOJ,EAAIa,EAAQb,EAErBG,GAtOK8G,OAAO,IAAIA,GAAM,EAAG,IACpBA,MAAM,IAAIA,GAAM,EAAG,sBCvCnC,WAAY3H,GAMJC,YAAS,IAAIC,aAAa,QALfC,IAAXH,GACAC,KAAKwB,KAAKzB,GAwMtB,OAhMI+L,eAAA,SAAGvL,GACC,OAAOP,KAAKD,OAAOQ,IAGvBuL,iBAAA,SAAK/L,GACD,IAAK,IAAI2B,EAAI,EAAGA,EAAI,EAAGA,IACnB1B,KAAKD,OAAO2B,GAAK3B,EAAO2B,GAG5B,OAAO1B,MAGX8L,kBAAA,WACI,IAAK,IAAIpK,EAAI,EAAGA,EAAI,EAAGA,IACnB1B,KAAKD,OAAO2B,GAAK,GAIzBoK,iBAAA,SAAKlL,GACIA,IAAQA,EAAO,IAAIkL,GAExB,IAAK,IAAIpK,EAAI,EAAGA,EAAI,EAAGA,IACnBd,EAAKb,OAAO2B,GAAK1B,KAAKD,OAAO2B,GAGjC,OAAOd,GAGXkL,gBAAA,WAEI,IADA,IAAMnK,KACGD,EAAI,EAAGA,EAAI,EAAGA,IACnBC,EAAKD,GAAK1B,KAAKD,OAAO2B,GAG1B,OAAOC,GAGXmK,gBAAA,SAAIvL,GACA,OACIP,KAAKD,OAAe,EAARQ,EAAY,GACxBP,KAAKD,OAAe,EAARQ,EAAY,KAIhCuL,gBAAA,SAAIvL,GACA,OACIP,KAAKD,OAAOQ,GACZP,KAAKD,OAAOQ,EAAQ,KAI5BuL,mBAAA,SAAO1K,EAAcN,gBAAAA,EPnEF,MOoEf,IAAK,IAAIY,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIX,KAAKC,IAAIhB,KAAKD,OAAO2B,GAAKN,EAAOQ,GAAGF,IAAMZ,EAC1C,OAAO,EAIf,OAAO,GAGXgL,wBAAA,WACI,OAAO9L,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,IAG1E+L,wBAAA,WAMI,OALA9L,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EACjBC,KAAKD,OAAO,GAAK,EAEVC,MAGX8L,sBAAA,WACI,IAAMC,EAAO/L,KAAKD,OAAO,GAKzB,OAHAC,KAAKD,OAAO,GAAKC,KAAKD,OAAO,GAC7BC,KAAKD,OAAO,GAAKgM,EAEV/L,MAGX8L,oBAAA,WACI,IAAI/H,EAAM/D,KAAKgM,cAEf,IAAKjI,EAAO,OAAO,KAEnBA,EAAM,EAAMA,EAEZ,IAAM7B,EAAMlC,KAAKD,OAAO,GAOxB,OALAC,KAAKD,OAAO,GAAKgE,EAAO/D,KAAKD,OAAO,GACpCC,KAAKD,OAAO,GAAKgE,GAAQ/D,KAAKD,OAAO,GACrCC,KAAKD,OAAO,GAAKgE,GAAQ/D,KAAKD,OAAO,GACrCC,KAAKD,OAAO,GAAKgE,EAAM7B,EAEhBlC,MAGX8L,qBAAA,SAAS1K,GACL,IAAMc,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,GAOxB,OALAC,KAAKD,OAAO,GAAKmC,EAAMd,EAAOQ,GAAG,GAAKO,EAAMf,EAAOQ,GAAG,GACtD5B,KAAKD,OAAO,GAAKmC,EAAMd,EAAOQ,GAAG,GAAKO,EAAMf,EAAOQ,GAAG,GACtD5B,KAAKD,OAAO,GAAKuC,EAAMlB,EAAOQ,GAAG,GAAKW,EAAMnB,EAAOQ,GAAG,GACtD5B,KAAKD,OAAO,GAAKuC,EAAMlB,EAAOQ,GAAG,GAAKW,EAAMnB,EAAOQ,GAAG,GAE/C5B,MAGX8L,mBAAA,SAAOvH,GACH,IAAMrC,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,GAElB2E,EAAM3D,KAAK2D,IAAIH,GACfK,EAAM7D,KAAK6D,IAAIL,GAOrB,OALAvE,KAAKD,OAAO,GAAKmC,EAAM0C,EAAMzC,EAAMuC,EACnC1E,KAAKD,OAAO,GAAKmC,GAAOwC,EAAMvC,EAAMyC,EACpC5E,KAAKD,OAAO,GAAKuC,EAAMsC,EAAMrC,EAAMmC,EACnC1E,KAAKD,OAAO,GAAKuC,GAAOoC,EAAMnC,EAAMqC,EAE7B5E,MAGX8L,yBAAA,SAAajL,EAAcmG,GACvB,IAAMxG,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EAEjB,OAAIuG,GACAA,EAAOS,IACHjH,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GACrCS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,IAGlCiH,GAEA,IAAIU,GACPlH,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,GACrCS,EAAIR,KAAKD,OAAO,GAAKU,EAAIT,KAAKD,OAAO,MAKjD+L,kBAAA,SAAMjL,GACF,IAAMqB,EAAMlC,KAAKD,OAAO,GAClBoC,EAAMnC,KAAKD,OAAO,GAClBuC,EAAMtC,KAAKD,OAAO,GAClBwC,EAAMvC,KAAKD,OAAO,GAElBS,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EAOjB,OALAT,KAAKD,OAAO,GAAKmC,EAAM1B,EACvBR,KAAKD,OAAO,GAAKoC,EAAM1B,EACvBT,KAAKD,OAAO,GAAKuC,EAAM9B,EACvBR,KAAKD,OAAO,GAAKwC,EAAM9B,EAEhBT,MAGJ8L,UAAP,SAAehF,EAAUC,EAAUC,GAC/B,IAAM9E,EAAM4E,EAAGlF,GAAG,GACZO,EAAM2E,EAAGlF,GAAG,GACZU,EAAMwE,EAAGlF,GAAG,GACZW,EAAMuE,EAAGlF,GAAG,GAElB,OAAIoF,GACAA,EAAOxF,MACHU,EAAM6E,EAAGnF,GAAG,GAAKO,EAAM4E,EAAGnF,GAAG,GAC7BM,EAAM6E,EAAGnF,GAAG,GAAKO,EAAM4E,EAAGnF,GAAG,GAC7BU,EAAMyE,EAAGnF,GAAG,GAAKW,EAAMwE,EAAGnF,GAAG,GAC7BU,EAAMyE,EAAGnF,GAAG,GAAKW,EAAMwE,EAAGnF,GAAG,KAG1BoF,GAEA,IAAI8E,GACP5J,EAAM6E,EAAGnF,GAAG,GAAKO,EAAM4E,EAAGnF,GAAG,GAC7BM,EAAM6E,EAAGnF,GAAG,GAAKO,EAAM4E,EAAGnF,GAAG,GAC7BU,EAAMyE,EAAGnF,GAAG,GAAKW,EAAMwE,EAAGnF,GAAG,GAC7BU,EAAMyE,EAAGnF,GAAG,GAAKW,EAAMwE,EAAGnF,GAAG,MA7LzBkK,YAAW,IAAIA,GAAOtE,sBCJzBsE,OAAMzH,OAAM5C,OAAMmH,OAAMlB,OAAMtD,OAAM/D"}